@charset "UTF-8";
/*------------------------------------*\
    STYLE.CSS
\*------------------------------------*/
/**
 * Here lies the custom styles for Cru.org. These styles have been
 * built on top of our front-end framework: brackets.css.
 *
 * Be sure read the warning before continuing to edit or add any new
 * styles. In addition, be sure to change the variables to turn off
 * demo mode and debug mode before pushing to production. 
 * 
 */
/*------------------------------------*\
 $CONTENTS
\*------------------------------------*/
/**
 * CONTENTS............You’re reading it!
 * WARNING.............There be rocks ahead
 * IMPORTS.............Begin importing the sections below
 *
 * TOOLS...............Functions that allow for some fun math
 * MIXINS..............A series of useful mixins for the project
 *** /ALERTS...........
 *** /ANIMATIONS.......
 *** /BORDER_RADIUS....
 *** /BOX-MODEL........
 *** /BUTTONS..........
 *** /CENTER-BLOCK.....
 *** /CLEARFIX.........
 *** /FORMS............
 *** /GRID-SETUP.......
 *** /IMAGES...........
 *** /LINKS............
 *** /MEDIA-QUERY......
 *** /MESSAGES.........
 *** /OPACITY..........
 *** /PANELS...........
 *** /PREFIX...........
 *** /SIZING...........
 *** /SPACING..........Do not implement this at the moment
 *** /TEXT.............
 *** /WIDTHS...........
 * NORMALIZE...........normalize.css
 * RESTART.............Set some defaults
 * CLEARFIX............
 * SHARED..............Shared declarations
 *
 * BASE................High-level elements like `html`, `body`, etc.
 * HEADINGS............Double-stranded heading hierarchy
 * PARAGRAPHS..........
 * QUOTES..............
 * LISTS...............
 * IMAGES..............
 * TABLES..............
 * FORMS...............
 *
 * GRIDS...............Fluid, proportional and nestable grids
 * BUTTONS.............Use the beautons micro library
 * ISLAND..............Boxed off content
 * NAVS................Simple abstraction to put a list in horizontal nav mode
 * PAGINATION..........Very stripped back, basic paginator
 * BREADCRUMB..........Simple breadcrumb trail object
 * MEDIA...............Media object
 *
 * HELPERS.............A series of helper classes to use arbitrarily
 * DEBUG...............Enable to add visual flags for debugging purposes
 *
 * FONT................Set up the primary font
 * COLORS..............Set base colors and variables for easy use
 *
 * PAGE................Overall page settings and foundation
 * LAYOUTS.............Primary widths and wrappers
 *
 * TEXT................Text element settings for articles, etc.
 * BUTTONS.............Cru specific buttons, extends brackets.css
 * TABLES..............Cru specific tables, extends brackets.css
 * FORMS...............Cru specific forms, extends brackets.css
 * VIDEO...............
 * IMAGES..............
 * HEADER..............
 * FOOTER..............
 * SOCIAL..............Site and post specific social media
 * SITE-SEARCH.........Primary site search, extends the header
 * NAVIGATION..........Praimry site nav, extends the header
 * DROPDOWNS...........Dropdown views for large screens, extends the navigation
 * OFF-CANVAS..........Off canvas nav for small screens, extends the navigation
 *
 * CAMPUS-LOCATOR......
 * COUNTRY-LIST........
 * SLIDER..............Primary site slider. For now only on homepage
 * POST................Basic post stylings for articles
 * POST-IMAGES.........Image handling in posts, etc, extends the post
 * PAGE-SUBNAV.........Additional navigation for community/landing pages
 *
 * ANIMATIONS..........Site-wide animation handling
 * UTILITIES...........A series of helper classes to use arbitrarily
 * DEBUG...............Enable to add visual flags for debugging purposes
 */
/*------------------------------------*\
  $WARNING
\*------------------------------------*/
/**
 * Custom styles for cru.org are meant to be place in the elements folder. 
 * They should be as specific to cru as possible and mainly ui related. If 
 * there is a generic feature needed, please submit an issue to the
 * brackets.css github page. 
 *
 */
/*------------------------------------*\
 $IMPORTS
\*------------------------------------*/
/**
 * Core variables, mixins, utilities, etc
 */
/*------------------------------------*\
    VARS.SCSS
\*------------------------------------*/
/**
 * Any variables you find set in brackets.css’ `_vars.scss` that you do not wish to
 * keep, simply redefine here. This means that if brackets.css, for example, sets
 * your `$base-font-size` at 16px and you wish it to be 14px, simply redeclare
 * that variable in this file. Brackets.css ignores its own variables in favour of
 * using your own, so you can completely modify how brackets.css works without ever
 * having to alter the framework itself.
 */
/**
 * Place any variables that should override brackets.css’ defaults here.
 */
/**
 * Would you like to show a baseline grid? This is handy during development.
 */
/*------------------------------------*\
    $BORDER-BOX
\*------------------------------------*/
/**
 * Do you want all elements to adopt `box-sizing:border-box;` as per
 * paulirish.com/2012/box-sizing-border-box-ftw ?
 */
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/**
 * Base font family
 */
/**
 * Default colours for objects’ borders etc.
 */
/**
 * Default value for edges and such
 */
/*------------------------------------*\
    $TYPOGRAPHY
\*------------------------------------*/
/**
 * Basic font sizes
 */
/**
 * Headings
 */
/* Header sizes */
/* Subheaders */
/**
 * Smalls
 */
/**
 * Paragraphs
 */
/**
 * Blockquotes
 */
/*------------------------------------*\
    $GRID
\*------------------------------------*/
/**
 * This grid system is heavily based off the work of Harry Roberts of
 * css-wizardry and inuit.css. Css-wizardry-grids provides the basic
 * foundation and inspiration.
 */
/**
 * If you are building a non-responsive site but would still like to use
 * the girds, set this to ‘false’:
 */
/**
 * Is this build mobile first? Setting to ‘true’ means that all grids will be
 * 100% width if you do not apply a more specific class to them.
 */
/**
 * Set the max width of your grids, if you set this to false, the wrapper will only
 * center the content and apply a left/right padding
 */
/**
 * Set the spacing between your grid items.
 */
/**
 * Would you like push and pull classes enabled? Keep in mind this adds a large
 * amount of additional code
 */
/**
 * Using `inline-block` means that the grid items need their whitespace removing
 * in order for them to work correctly. Set the following to true if you are
 * going to achieve this by manually removing/commenting out any whitespace in
 * your HTML yourself.
 *
 * Setting this to false invokes a hack which cannot always be guaranteed,
 * please see the following for more detail:
 *
 * github.com/csswizardry/csswizardry-grids/commit/744d4b23c9d2b77d605b5991e54a397df72e0688
 * github.com/csswizardry/inuit.css/issues/170#issuecomment-14859371
 */
/**
 * Define your breakpoints. The first value is the prefix that shall be used for
 * your classes (e.g. `.palm--one-half`), the second value is the media query
 * that the breakpoint fires at.
 */
/**
 * Define which namespaced breakpoints you would like to generate for each of
 * widths, push and pull. This is handy if you only need pull on, say, desk, or
 * you only need a new width breakpoint at mobile sizes. It allows you to only
 * compile as much CSS as you need. All are turned on by default, but you can
 * add and remove breakpoints at will.
 *
 * Push and pull shall only be used if `$push` and/or `$pull` and `$responsive`
 * have been set to ‘true’.
 */
/*------------------------------------*\
    $LINKS
\*------------------------------------*/
/*------------------------------------*\
    $BUTTONS
\*------------------------------------*/
/**
 * I have included variables for only one buttons, the default, since my wish
 * is to not impose style. Feel free to add more variables. I have included 
 * a mixin to help you generate these easily
 */
/*------------------------------------*\
    $COMPONENTS
\*------------------------------------*/
/**
 * These variables are framework variables, sourced from variables defined
 * above. Feel free to use these variables throughout your project, but do not
 * modify or reassign them.
 */
/*------------------------------------*\
    $PROJECT-MODES
\*------------------------------------*/
/**
 * This allows you to use debug settings which can be useful in
 * development.
 *
 * Make sure to set this to false before using the code for production.
 */
/*------------------------------------*\
    $OBJECTS-AND-ABSTRACTIONS
\*------------------------------------*/
/**
 * All of brackets.css’ objects and abstractions are initially turned off by
 * default. This means that you start any project with as little as possible,
 * and introducing objects and abstractions is as simple as switching the
 * following variables to `true`.
 */
/*------------------------------------*\
    $OVERRIDES
\*------------------------------------*/
/*------------------------------------*\
    $CUSTOM
\*------------------------------------*/
/**
 * Place any of your own variables that sit on top of brackets.css here.
 */
/*------------------------------------*\
    $Fonts
\*------------------------------------*/
/*------------------------------------*\
    $Color Palette
\*------------------------------------*/
/**
 * Primary colors
 */
/* Cru Gold */
/* Cru Gray */
/* White */
/**
 * Secondary colors
 */
/* Cru Orange */
/**
 * Accent colors
 */
/* Cru Bright Blue */
/* Cru Deep Blue */
/**
 * Grayscale
 */
/**
 * Additional Colors
 */
/*------------------------------------*\
    $BUTTON SETTINGS
\*------------------------------------*/
/*------------------------------------*\
    $URL PATHS
\*------------------------------------*/
/*------------------------------------*\
    $ANIMATIONS
\*------------------------------------*/
/*------------------------------------*\
    $ADDITIONAL
\*------------------------------------*/
/*------------------------------------*\
    $TOOLS
\*------------------------------------*/
/**
 * We will begin by importing functions that will be used in the
 * framework. There is no need to change any of these functions
 */
/**
 * This allows us to use the rem-calc mixin for shorthand 
 * conversions.
 */
/**
 * Use this em function instead of the other
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * These mixins are for the library to use only, you should not need to modify
 * them at all. 
 */
/*------------------------------------*\
    $MIXINS/ALERTS
\*------------------------------------*/
/**
 * Animations
 */
/*------------------------------------*\
    $MIXINS/BUTTONS
\*------------------------------------*/
/**
 * Border Radius
 */
/* Top-Left Corner */
/* Top-Right Corner Only*/
/* Bottom-Left Corner Only */
/* Bottom-Right Corner Only */
/* Both Top Corners */
/* Both Right Corners */
/* Both Bottom Corners */
/* Both Left Corners */
/*------------------------------------*\
    $MIXINS/BOX-MODEL
\*------------------------------------*/
/**
 * Box Sizing
 */
/*------------------------------------*\
    $MIXINS/BUTTONS
\*------------------------------------*/
/**
 * Button Varients
 */
/**
 * Button Effects: use with btn
 */
/**
 * Button Sizes
 */
/*------------------------------------*\
    $MIXINS/CENTER-BLOCK
\*------------------------------------*/
/**
 * Center-align a block level element
 */
/*------------------------------------*\
    $MIXINS/CLEARFIX
\*------------------------------------*/
/**
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    contenteditable attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that are clearfixed.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 * 
 *  Source: http://nicolasgallagher.com/micro-clearfix-hack/
 */
/**
 * The newest clearfix: Unsure about support
 */
/*------------------------------------*\
    $MIXINS/FORMS
\*------------------------------------*/
/**
 * Form control sizing
 *
 * Relative text size, padding, and border-radii changes for form controls. For
 * horizontal sizing, wrap controls in the predefined grid classes. `<select>`
 * element gets special love because it's special, and that's a fact!
 * [converter] $parent hack
 */
/*------------------------------------*\
    $MIXINS/GRID-SETUP
\*------------------------------------*/
/**
 * Enclose a block of code with a media query as named in `$breakpoints`.
 */
/*------------------------------------*\
    $MIXINS/IMAGES
\*------------------------------------*/
/** 
 * Responsive image
 *
 * Keep images from scaling beyond the width of their parents.
 */
/*------------------------------------*\
    $MIXINS/LINKS
\*------------------------------------*/
/**
 * Writes the typical link, button in one go
 * Includes active and focus for accessibility 
 * 
 */
/*------------------------------------*\
    $MIXINS/MEDIA-QUERY
\*------------------------------------*/
/**
 * Media query for easy breakpoint. Use pixel width with or without units
 * and it will convert to em 
 */
/**
 * Set $query1: max for a max-qidth query, defaults to min-width
 */
/*------------------------------------*\
    $MIXINS/MESSAGE
\*------------------------------------*/
/*------------------------------------*\
    $MIXINS/PANELS
\*------------------------------------*/
/*------------------------------------*\
    $MIXINS/PREFIX
\*------------------------------------*/
/**
 * Create vendor-prefixed CSS in one go, e.g.
 *
   `@include vendor(border-radius, 4px);`
 *
 */
/*------------------------------------*\
    $MIXINS/SIZING
\*------------------------------------*/
/**
 * Can handle shorthand calculations
 * Do not change the variable set
 * http://hugogiraudel.com/2013/03/18/ultimate-rem-mixin/
 */
/**
 * Space elements by an amount based on your magic number. Pass in the property
 * to be indented as a paramater, e.g.:
 *
 * pre {
 *    @include spacing(padding-left);
 * }
 */
/*------------------------------------*\
    $MIXINS/SPACING
\*------------------------------------*/
/**
 *  Calculates any number of margins and paddings in one swoop
 * 
 * Running this is as easy 
 * @include vertical-calc(1, 12) {}
 *
 * DO NOT USE AT THE MOMENT
 */
/*------------------------------------*\
    $MIXINS/TEXT
\*------------------------------------*/
/**
 * Quickly generate a font-size in rems, with a pixel fallback, based on the
 * value we pass into the mixin, e.g.:
 *
 * h1 {
 *     @include font-size(24px);
 * }
 */
/**
 * Style any number of headings in one fell swoop, e.g.:
 *
   .foo{
       @include headings(1, 3){
           color:#c0ffee;
       }
    }
 *
 * With thanks to @lar_zzz, @paranoida, @rowanmanning and ultimately
 * @thierrylemoulec for refining and improving my initial mixin.
 */
/*! normalize.css v2.1.0 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/*
 * Correct `block` display not defined in IE 8/9.
 */
/* line 11, ../scss/generic/_normalize.scss */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/*
 * Correct `inline-block` display not defined in IE 8/9.
 */
/* line 30, ../scss/generic/_normalize.scss */
audio,
canvas,
video {
  display: inline-block; }

/*
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
/* line 41, ../scss/generic/_normalize.scss */
audio:not([controls]) {
  display: none;
  height: 0; }

/*
 * Address styling not present in IE 8/9.
 */
/* line 50, ../scss/generic/_normalize.scss */
[hidden] {
  display: none; }

/* ==========================================================================
   Base
   ========================================================================== */
/*
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
/* line 64, ../scss/generic/_normalize.scss */
html {
  font-family: sans-serif;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */ }

/*
 * Remove default margin.
 */
/* line 74, ../scss/generic/_normalize.scss */
body {
  margin: 0; }

/* ==========================================================================
   Links
   ========================================================================== */
/*
 * Address `outline` inconsistency between Chrome and other browsers.
 */
/* line 86, ../scss/generic/_normalize.scss */
a:focus {
  outline: thin dotted; }

/*
 * Improve readability when focused and also mouse hovered in all browsers.
 */
/* line 94, ../scss/generic/_normalize.scss */
a:active,
a:hover {
  outline: 0; }

/* ==========================================================================
   Typography
   ========================================================================== */
/*
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
/* line 108, ../scss/generic/_normalize.scss */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/*
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
/* line 117, ../scss/generic/_normalize.scss */
abbr[title] {
  border-bottom: 1px dotted; }

/*
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
/* line 125, ../scss/generic/_normalize.scss */
b,
strong {
  font-weight: bold; }

/*
 * Address styling not present in Safari 5 and Chrome.
 */
/* line 134, ../scss/generic/_normalize.scss */
dfn {
  font-style: italic; }

/*
 * Address differences between Firefox and other browsers.
 */
/* line 142, ../scss/generic/_normalize.scss */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/*
 * Address styling not present in IE 8/9.
 */
/* line 152, ../scss/generic/_normalize.scss */
mark {
  background: #ff0;
  color: #000; }

/*
 * Correct font family set oddly in Safari 5 and Chrome.
 */
/* line 161, ../scss/generic/_normalize.scss */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em; }

/*
 * Improve readability of pre-formatted text in all browsers.
 */
/* line 173, ../scss/generic/_normalize.scss */
pre {
  white-space: pre-wrap; }

/*
 * Set consistent quote types.
 */
/* line 181, ../scss/generic/_normalize.scss */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/*
 * Address inconsistent and variable font size in all browsers.
 */
/* line 189, ../scss/generic/_normalize.scss */
small {
  font-size: 80%; }

/*
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
/* line 197, ../scss/generic/_normalize.scss */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

/* line 205, ../scss/generic/_normalize.scss */
sup {
  top: -0.5em; }

/* line 209, ../scss/generic/_normalize.scss */
sub {
  bottom: -0.25em; }

/* ==========================================================================
   Embedded content
   ========================================================================== */
/*
 * Remove border when inside `a` element in IE 8/9.
 */
/* line 221, ../scss/generic/_normalize.scss */
img {
  border: 0; }

/*
 * Correct overflow displayed oddly in IE 9.
 */
/* line 229, ../scss/generic/_normalize.scss */
svg:not(:root) {
  overflow: hidden; }

/* ==========================================================================
   Figures
   ========================================================================== */
/*
 * Address margin not present in IE 8/9 and Safari 5.
 */
/* line 241, ../scss/generic/_normalize.scss */
figure {
  margin: 0; }

/* ==========================================================================
   Forms
   ========================================================================== */
/*
 * Define consistent border, margin, and padding.
 */
/* line 253, ../scss/generic/_normalize.scss */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/*
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
/* line 264, ../scss/generic/_normalize.scss */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/*
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
/* line 275, ../scss/generic/_normalize.scss */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */ }

/*
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
/* line 289, ../scss/generic/_normalize.scss */
button,
input {
  line-height: normal; }

/*
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
/* line 301, ../scss/generic/_normalize.scss */
button,
select {
  text-transform: none; }

/*
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
/* line 314, ../scss/generic/_normalize.scss */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/*
 * Re-set default cursor for disabled elements.
 */
/* line 326, ../scss/generic/_normalize.scss */
button[disabled],
html input[disabled] {
  cursor: default; }

/*
 * 1. Address box sizing set to `content-box` in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 */
/* line 336, ../scss/generic/_normalize.scss */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/*
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
/* line 348, ../scss/generic/_normalize.scss */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/*
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
/* line 360, ../scss/generic/_normalize.scss */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/*
 * Remove inner padding and border in Firefox 4+.
 */
/* line 369, ../scss/generic/_normalize.scss */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/*
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
/* line 380, ../scss/generic/_normalize.scss */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* ==========================================================================
   Tables
   ========================================================================== */
/*
 * Remove most spacing between table cells.
 */
/* line 393, ../scss/generic/_normalize.scss */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/*------------------------------------*\
    $RESTART
\*------------------------------------*/
/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
/* line 8, ../scss/generic/_restart.scss */
abbr[title], dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
/* line 15, ../scss/generic/_restart.scss */
u, ins {
  text-decoration: none; }

/**
 * Apply faux underline via `border-bottom`.
 */
/* line 22, ../scss/generic/_restart.scss */
ins {
  border-bottom: 1px solid; }

/**
 * Give form elements some cursor interactions...
 */
/* line 30, ../scss/generic/_restart.scss */
label,
input,
textarea,
button,
select,
option {
  cursor: pointer; }

/* line 39, ../scss/generic/_restart.scss */
.text-input:active,
.text-input:focus,
textarea:active,
textarea:focus {
  cursor: text;
  outline: none; }

/* line 49, ../scss/generic/_restart.scss */
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

/* line 60, ../scss/generic/_restart.scss */
a {
  color: #007cb1;
  text-decoration: none; }
  /* line 64, ../scss/generic/_restart.scss */
  a:hover, a:focus {
    color: #006a98;
    text-decoration: underline; }

/* line 74, ../scss/generic/_restart.scss */
img {
  vertical-align: middle;
  max-width: 100%;
  /* Set images to the full width of parent */
  /**
   * So that `alt` text is visually offset if images don’t load.
   */
  font-style: italic; }

/* line 86, ../scss/generic/_restart.scss */
hr {
  border: 0;
  border-top: 1px solid;
  border-color: #e9e9e9; }

/* Helpful Typography Defaults */
/* line 94, ../scss/generic/_restart.scss */
em,
i {
  font-style: italic;
  line-height: inherit; }

/* line 100, ../scss/generic/_restart.scss */
strong,
b {
  font-weight: bold;
  line-height: inherit; }

/* line 106, ../scss/generic/_restart.scss */
small {
  font-size: 80%;
  line-height: inherit; }

/*------------------------------------*\
    $CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.clearfix` class appearing
 * over and over in your markup.
 */
/* line 9, ../scss/generic/_clearfix.scss */
.cf, .nav, .grid, .home-banner {
  *zoom: 1; }
  /* line 38, ../../../../../../Library/Ruby/Gems/2.0.0/gems/compass-core-1.0.1/stylesheets/compass/utilities/general/_clearfix.scss */
  .cf:after, .nav:after, .grid:after, .home-banner:after {
    content: "";
    display: table;
    clear: both; }

/*------------------------------------*\
    $SHARED
\*------------------------------------*/
/**
 * A lot of elements need to share some declarations (mainly for
 * vertical rhythm), so we `@extend` some silent classes.
 */
/* line 8, ../scss/core/_shared.scss */
h1, h2, h3, h4, h5, h6,
hgroup, p,
ul, ol, dl,
address, table,
fieldset, figure,
pre,
.form-fields > li,
.media,
.island,
.islet {
  margin: 0;
  padding: 0; }

/* line 13, ../scss/core/_shared.scss */
h1, h2, h3, h4, h5, h6,
hgroup, p,
ul, ol, dl,
address, table,
fieldset, figure,
pre,
.form-fields > li,
.media,
.island,
.islet {
  margin-bottom: 29px;
  margin-bottom: 1.52632rem; }

/**
 * Where `margin-bottom` is concerned, this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 * 
 * We will be using the above silent classes to quickly remove default 
 * margin and padding and quickly apply margin-bottom to the element with
 * default rem units and px fallbacks. 
 * 
 * By default $base-line-height is set to 24px, therefore so is the
 * $magic-number.
 * Therefore, $half-spacing-unit is 12px and $double-spacing-unit is 48px 
 *
 */
/**
 * Base elements
 */
/**
 * `hr` elements only take up a few pixels, so we need to give them special
 * treatment regarding vertical rhythm.
 */
/* line 62, ../scss/core/_shared.scss */
hr {
  margin-top: 58px;
  margin-bottom: 58px; }

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once, here.
 */
/* line 72, ../scss/core/_shared.scss */
ul, ol, dd {
  margin-left: 58px;
  margin-left: 2rem; }

/**
 * Base styles; unclassed HTML elements etc.
 */
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/* 
 * Reset the box-sizing
 */
/**
 * Let’s make the box model all nice, shall we...?
 */
/* line 15, ../scss/core/_base.scss */
*, *:before, *:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

/**
 * 1. Set the base element’s `font-size` to the value of your choosing. Set in
 *    ems, assuming a browser default of 16px.
 * 2. Work out the unitless `line-height` for your project based around your
 *    desired `line-height` (defined previously in pixels), asnd your project’s
 *    base font size.
 */
/* line 38, ../scss/core/_base.scss */
html {
  font-size: 1.1875em;
  /* [1] */
  line-height: 1.52632;
  /* [2] */
  background-color: #f7f7f7;
  color: #353535;
  overflow-y: scroll;
  min-height: 100%;
    /**
	 * If you have chosen to display a baseline grid, we turn it on here.
	 */ }

/* line 58, ../scss/core/_base.scss */
body {
  font-family: "freight-sans-pro", "Helvetica Neue", Arial, Helvetica, sans-serif;
  -webkit-font-smoothing: antialiased; }

/*------------------------------------*\
    $HEADINGS
\*------------------------------------*/
/**
 * Headings 1-6
 * 
 */
/* line 8, ../scss/core/_headings.scss */
h1, .h1 {
  font-size: 200;
  font-size: 75.9541px;
  font-size: 3.99758rem;
  line-height: 1.14543; }
  @media screen and (max-width: 34.375em) {
    /* line 8, ../scss/core/_headings.scss */
    h1, .h1 {
      font-size: 60.9541px;
      font-size: 3.20811rem;
      line-height: 1.4273; } }

/* line 19, ../scss/core/_headings.scss */
h2, .h2 {
  font-size: 53.71577px;
  font-size: 2.82715rem;
  line-height: 1.07976; }
  @media screen and (max-width: 34.375em) {
    /* line 19, ../scss/core/_headings.scss */
    h2, .h2 {
      font-size: 45.71577px;
      font-size: 2.40609rem;
      line-height: 1.26871; } }

/* line 27, ../scss/core/_headings.scss */
h3, .h3 {
  font-size: 37.98852px;
  font-size: 1.9994rem;
  line-height: 1.52678; }
  @media screen and (max-width: 34.375em) {
    /* line 27, ../scss/core/_headings.scss */
    h3, .h3 {
      font-size: 32.98852px;
      font-size: 1.73624rem;
      line-height: 1.75819; } }

/* line 36, ../scss/core/_headings.scss */
h4, .h4 {
  font-size: 26.866px;
  font-size: 1.414rem;
  line-height: 1.07943; }
  @media screen and (max-width: 34.375em) {
    /* line 36, ../scss/core/_headings.scss */
    h4, .h4 {
      font-size: 21.866px;
      font-size: 1.15084rem;
      line-height: 1.32626; } }

/* line 45, ../scss/core/_headings.scss */
h5, .h5 {
  font-size: 19px;
  font-size: 1rem;
  line-height: 1.52632; }

/* line 50, ../scss/core/_headings.scss */
h6, .h6 {
  font-size: 15.2px;
  font-size: 0.8rem;
  line-height: 1.90789; }

/*------------------------------------*\
    $LISTS
\*------------------------------------*/
/**
 * Remove vertical spacing from nested lists.
 */
/* line 8, ../scss/core/_lists.scss */
li > ul,
li > ol,
li > dl {
  margin-bottom: 0; }

/**
 * Have a numbered `ul` without the semantics implied by using an `ol`.
 */
/*ul*/
/* line 18, ../scss/core/_lists.scss */
.numbered-list {
  list-style-type: decimal; }

/**
 * Removes the indentation and the bullets from a list
 */
/* line 25, ../scss/core/_lists.scss */
.bare-list {
  margin: 0;
  padding: 0;
  list-style: none; }

/* line 31, ../scss/core/_lists.scss */
.block-list, .form-fields, .check-list {
  list-style: none;
  margin: 0; }
  /* line 35, ../scss/core/_lists.scss */
  .block-list > li a, .form-fields > li a, .check-list > li a {
    display: block; }

/*------------------------------------*\
    $FORMS
\*------------------------------------*/
/* line 5, ../scss/core/_forms.scss */
fieldset {
  border: 0;
  padding: 29px;
  padding: 1.52632rem; }
  /* line 10, ../scss/core/_forms.scss */
  fieldset + fieldset {
    margin-bottom: 0; }

/* line 16, ../scss/core/_forms.scss */
.form__inputs:first-of-type {
  margin-bottom: 0; }

/* line 20, ../scss/core/_forms.scss */
.form__actions {
  margin-bottom: 0; }

/* line 25, ../scss/core/_forms.scss */
legend {
  display: block;
  width: 100%;
  padding: 0;
  font-size: 23.75px;
  font-size: 1.25rem;
  line-height: 1.22105; }

/**
 * Text Inputs and Form Control
 *
 * Instead of a `[type]` selector for each kind of form input, we just use a
 * class to target any/every one, e.g.:
 *a
   <input type=text class=text-input>
   <input type=email class=text-input>
   <input type=password class=text-input>
 *
 * For non-text based inputs such as <select>, <radio>, etc use .form-control
 * which allows you to add nice hover/focus effect to the text inputs if you
 * choose
 *
 */
/* line 48, ../scss/core/_forms.scss */
.text-input:hover, textarea:hover {
  border-color: #8c8c8c; }

/* line 53, ../scss/core/_forms.scss */
.text-input, .form-control {
  display: block;
  width: auto;
  /**
   * Make inputs at least the height of their button counterpart (base line-height + padding + border)
   */
  height: 34.25px;
  padding: 4.83333px 9.66667px;
  font-size: 16.625px;
  line-height: 29px;
  background-image: none;
  border: 2px solid #cccccc;
  border-radius: 2px;
  -moz-transition: border-color, ease 0.15s;
  -o-transition: border-color, ease 0.15s;
  -webkit-transition: border-color, ease 0.15s;
  transition: border-color, ease 0.15s; }
  /* line 73, ../scss/core/_forms.scss */
  .text-input.disabled, .form-control.disabled {
    cursor: not-allowed; }

/**
 * Group sets of form fields in a list, e.g.:
 *
   <ul class=form-fields>
       <li>
           <label />
           <input />
       </li>
       <li>
           <label />
           <select />
       </li>
       <li>
           <label />
           <input />
       </li>
   </ul>
 *
 */
/* line 107, ../scss/core/_forms.scss */
.form-fields > li:last-child {
  margin-bottom: 0; }

/**
 * Labels
 *
 * Define a `.label` class as well as a `label` element. This means we can apply
 * label-like styling to meta-labels for groups of options where a `label`
 * element is not suitable, e.g.:
 *
   <li>
      <span class=label>Select an option below:</span>
      <ul class="multi-list  four-cols">
          <li>
              <input /> <label />
          </li>
          <li>
              <input /> <label />
          </li>
          <li>
              <input /> <label />
          </li>
          <li>
              <input /> <label />
          </li>
      </ul>
  </li>
 *
 */
/* line 139, ../scss/core/_forms.scss */
label,
.label {
  display: block;
  /* 3 */
  /* 3 */
  /* 4 */
  /* 6 */
  /* 6 */
  /* 7 */
  margin-bottom: 6px;
  /* 9 */
  margin-bottom: 0.31579rem;
  /* 9 */ }

/**
 * Extra help text in `label`s, e.g.:
 *
   <label>Card number <small class=additional>No spaces</small></label>
 *
 */
/* line 151, ../scss/core/_forms.scss */
.additional {
  display: block;
  font-weight: normal;
  font-style: italic; }

/* line 157, ../scss/core/_forms.scss */
input + .additional {
  /* 3 */
  /* 3 */
  /* 4 */
  /* 6 */
  /* 6 */
  /* 7 */
  margin-top: 6px;
  /* 9 */
  margin-top: 0.31579rem;
  /* 9 */ }

/* line 161, ../scss/core/_forms.scss */
.additional, .check-list > li {
  /* 3 */
  /* 3 */
  /* 4 */
  /* 6 */
  /* 6 */
  /* 7 */
  margin-bottom: 12px;
  /* 9 */
  margin-bottom: 0.63158rem;
  /* 9 */ }

/*
 * Groups of checkboxes and radios, e.g.:
 *
   <li>
       <ul class=check-list>
           <li>
               <input /> <label />
           </li>
           <li>
               <input /> <label />
           </li>
       </ul>
   </li>
 *
 */
/*
 * Labels in check-lists
 */
/* line 188, ../scss/core/_forms.scss */
.check-label,
.check-list label,
.check-list .label {
  display: inline-block; }

/**
 * Spoken forms are for forms that read like spoken word, e.g.:
 *
   <li class=spoken-form>
       Hello, my <label for=spoken-name>name</label> is
       <input type=text class=text-input id=spoken-name>. My home
       <label for=country>country</label> is
       <select id=country>
           <option>UK</option>
           <option>US</option>
           <option>Other</option>
       </select>
   </li>
 *
 */
/* line 213, ../scss/core/_forms.scss */
.spoken-form input, .spoken-form select, .spoken-form label {
  display: inline-block; }

/**
 * Extra help text displayed after a field when that field is in focus, e.g.:
 *
   <label for=email>Email:</label>
   <input type=email class=text-input id=email>
   <small class=extra-help>.edu emails only</small>
 *
 * We leave the help text in the document flow and merely set it to
 * `visibility:hidden;`. This means that it won’t interfere with anything once
 * it reappears.
 *
 */
/*small*/
/* line 233, ../scss/core/_forms.scss */
.form-help {
  display: block;
  visibility: hidden;
  max-height: 0; }

/* line 239, ../scss/core/_forms.scss */
.text-input:active + .form-help,
.text-input:focus + .form-help {
  visibility: visible;
  max-height: inherit;
  margin-top: 6px;
  margin-top: 0.31579rem; }

/* line 248, ../scss/core/_forms.scss */
input[type="search"] {
  -webkit-appearance: textfield;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

/**
 * Objects and abstractions
 */
/*------------------------------------*\
    $GRIDS
\*------------------------------------*/
/**
 * csswizardry grids provides you with widths to suit a number of breakpoints
 * designed around devices of a size you specify. Out of the box, csswizardry
 * grids caters to the following types of device:
 *
 * palm     --  palm-based devices, like phones and small tablets
 * lap      --  lap-based devices, like iPads or laptops
 * portable --  all of the above
 * desk     --  stationary devices, like desktop computers
 * regular  --  any/all types of device
 *
 * These namespaces are then used in the library to give you the ability to
 * manipulate your layouts based around them, for example:
 *
   <div class="grid__item  one-whole  lap--one-half  desk--one-third">
 *
 * This would give you a grid item which is 100% width unless it is on a lap
 * device, at which point it become 50% wide, or it is on a desktop device, at
 * which point it becomes 33.333% width.
 *
 * csswizardry grids also has push and pull classes which allow you to nudge
 * grid items left and right by a defined amount. These follow the same naming
 * convention as above, but are prepended by either `push--` or `pull--`, for
 * example:
 *
   `class="grid__item  one-half  push--one-half"`
 *
 * This would give you a grid item which is 50% width and pushed over to the
 * right by 50%.
 *
 * All classes in csswizardry grids follow this patten, so you should fairly
 * quickly be able to piece together any combinations you can imagine, for
 * example:
 *
   `class="grid__item  one-whole  lap--one-half  desk--one-third  push--desk--one-third"`
 *
   `class="grid__item  one-quarter  palm--one-half  push--palm--one-half"`
 *
   `class="grid__item  palm--one-third  desk--five-twelfths"`
 */
/*------------------------------------*\
    $GRID SETUP
\*------------------------------------*/
/**
 * 1. Allow the grid system to be used on lists.
 * 2. Remove any margins and paddings that might affect the grid system.
 * 3. Apply a negative `margin-left` to negate the columns’ gutters.
 */
/* line 54, ../scss/core/_grids.scss */
.grid {
  list-style: none;
  /* [1] */
  margin: 0;
  /* [2] */
  padding: 0;
  /* [2] */
  margin-left: -29px;
  /* [3] */ }

/**
 * 1. Cause columns to stack side-by-side.
 *    - Not implemented at the moment due to legacy support
 *
 * 2. Align columns to the tops of each other.
 * 3. Space columns apart.
 * 4. Full-width unless told to behave otherwise.
 * 5. Required to combine fluid widths and fixed gutters.
 */
/* line 88, ../scss/core/_grids.scss */
.grid__item {
  float: left;
  vertical-align: top;
  /* [2] */
  padding-left: 29px;
  /* [3] */
  width: 100%;
  /* [4] */
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  /* [5] */ }

/**
 * Reversed grids allow you to structure your source in the opposite order to
 * how your rendered layout will appear. Extends `.grid`.
 */
/* line 112, ../scss/core/_grids.scss */
.grid--rev {
  direction: rtl;
  text-align: left; }
  /* line 116, ../scss/core/_grids.scss */
  .grid--rev > .grid__item {
    direction: ltr;
    text-align: left; }

/**
 * Align the entire grid to the right. Extends `.grid`.
 */
/* line 126, ../scss/core/_grids.scss */
.grid--right {
  text-align: right; }
  /* line 129, ../scss/core/_grids.scss */
  .grid--right > .grid__item {
    text-align: left; }

/**
 * Centered grids align grid items centrally without needing to use push or pull
 * classes. Extends `.grid`.
 */
/* line 139, ../scss/core/_grids.scss */
.grid--center {
  text-align: center; }
  /* line 142, ../scss/core/_grids.scss */
  .grid--center > .grid__item {
    text-align: left; }

/**
 * Align grid cells vertically (`.grid--middle` or `.grid--bottom`). Extends
 * `.grid`.
 */
/* line 153, ../scss/core/_grids.scss */
.grid--middle > .grid__item {
  vertical-align: middle; }

/*------------------------------------*\
    $MIXINS/WIDTHS
\*------------------------------------*/
/**
 * Create our width classes, prefixed by the specified namespace.
 */
/**
 * Our regular, non-responsive width classes.
 */
/**
 * Whole
 */
/* line 11, ../scss/generic/mixins/_widths.scss */
.one-whole {
  width: 100%; }

/**
 * Halves
 */
/* line 17, ../scss/generic/mixins/_widths.scss */
.one-half,
.two-quarters,
.three-sixths,
.four-eighths,
.five-tenths,
.six-twelfths {
  width: 50%; }

/**
 * Thirds.
 */
/* line 27, ../scss/generic/mixins/_widths.scss */
.one-third,
.two-sixths,
.three-ninths,
.four-twelfths {
  width: 33.33333%; }

/* line 32, ../scss/generic/mixins/_widths.scss */
.two-thirds,
.four-sixths,
.six-ninths,
.eight-twelfths {
  width: 66.66667%; }

/**
 * Quarters.
 */
/* line 40, ../scss/generic/mixins/_widths.scss */
.one-quarter,
.two-eighths,
.three-twelfths {
  width: 25%; }

/* line 44, ../scss/generic/mixins/_widths.scss */
.three-quarters,
.six-eighths,
.nine-twelfths {
  width: 75%; }

/**
 * Fifths.
 */
/* line 51, ../scss/generic/mixins/_widths.scss */
.one-fifth,
.two-tenths {
  width: 20%; }

/* line 54, ../scss/generic/mixins/_widths.scss */
.two-fifths,
.four-tenths {
  width: 40%; }

/* line 57, ../scss/generic/mixins/_widths.scss */
.three-fifths,
.six-tenths {
  width: 60%; }

/* line 60, ../scss/generic/mixins/_widths.scss */
.four-fifths,
.eight-tenths {
  width: 80%; }

/**
 * Sixths.
 */
/* line 66, ../scss/generic/mixins/_widths.scss */
.one-sixth,
.two-twelfths {
  width: 16.66667%; }

/* line 69, ../scss/generic/mixins/_widths.scss */
.five-sixths,
.ten-twelfths {
  width: 83.33333%; }

/**
 * Eighths.
 */
/* line 75, ../scss/generic/mixins/_widths.scss */
.one-eighth {
  width: 12.5%; }

/* line 77, ../scss/generic/mixins/_widths.scss */
.three-eighths {
  width: 37.5%; }

/* line 79, ../scss/generic/mixins/_widths.scss */
.five-eighths {
  width: 62.5%; }

/* line 81, ../scss/generic/mixins/_widths.scss */
.seven-eighths {
  width: 87.5%; }

/**
 * Ninths.
 */
/* line 86, ../scss/generic/mixins/_widths.scss */
.one-ninth {
  width: 11.11111%; }

/* line 88, ../scss/generic/mixins/_widths.scss */
.two-ninths {
  width: 22.22222%; }

/* line 90, ../scss/generic/mixins/_widths.scss */
.four-ninths {
  width: 44.44444%; }

/* line 92, ../scss/generic/mixins/_widths.scss */
.five-ninths {
  width: 55.55556%; }

/* line 94, ../scss/generic/mixins/_widths.scss */
.seven-ninths {
  width: 77.77778%; }

/* line 96, ../scss/generic/mixins/_widths.scss */
.eight-ninths {
  width: 88.88889%; }

/**
 * Tenths.
 */
/* line 101, ../scss/generic/mixins/_widths.scss */
.one-tenth {
  width: 10%; }

/* line 103, ../scss/generic/mixins/_widths.scss */
.three-tenths {
  width: 30%; }

/* line 105, ../scss/generic/mixins/_widths.scss */
.seven-tenths {
  width: 70%; }

/* line 107, ../scss/generic/mixins/_widths.scss */
.nine-tenths {
  width: 90%; }

/**
 * Twelfths.
 */
/* line 112, ../scss/generic/mixins/_widths.scss */
.one-twelfth {
  width: 8.33333%; }

/* line 114, ../scss/generic/mixins/_widths.scss */
.five-twelfths {
  width: 41.66667%; }

/* line 116, ../scss/generic/mixins/_widths.scss */
.seven-twelfths {
  width: 58.33333%; }

/* line 118, ../scss/generic/mixins/_widths.scss */
.eleven-twelfths {
  width: 91.66667%; }

/**
 * Our responsive classes, if we have enabled them.
 */
@media only screen and (max-width: 480px) {
  /**
   * Whole
   */
  /* line 11, ../scss/generic/mixins/_widths.scss */
  .palm--one-whole {
    width: 100%; }

  /**
   * Halves
   */
  /* line 17, ../scss/generic/mixins/_widths.scss */
  .palm--one-half,
  .palm--two-quarters,
  .palm--three-sixths,
  .palm--four-eighths,
  .palm--five-tenths,
  .palm--six-twelfths {
    width: 50%; }

  /**
   * Thirds.
   */
  /* line 27, ../scss/generic/mixins/_widths.scss */
  .palm--one-third,
  .palm--two-sixths,
  .palm--three-ninths,
  .palm--four-twelfths {
    width: 33.33333%; }

  /* line 32, ../scss/generic/mixins/_widths.scss */
  .palm--two-thirds,
  .palm--four-sixths,
  .palm--six-ninths,
  .palm--eight-twelfths {
    width: 66.66667%; }

  /**
   * Quarters.
   */
  /* line 40, ../scss/generic/mixins/_widths.scss */
  .palm--one-quarter,
  .palm--two-eighths,
  .palm--three-twelfths {
    width: 25%; }

  /* line 44, ../scss/generic/mixins/_widths.scss */
  .palm--three-quarters,
  .palm--six-eighths,
  .palm--nine-twelfths {
    width: 75%; }

  /**
   * Fifths.
   */
  /* line 51, ../scss/generic/mixins/_widths.scss */
  .palm--one-fifth,
  .palm--two-tenths {
    width: 20%; }

  /* line 54, ../scss/generic/mixins/_widths.scss */
  .palm--two-fifths,
  .palm--four-tenths {
    width: 40%; }

  /* line 57, ../scss/generic/mixins/_widths.scss */
  .palm--three-fifths,
  .palm--six-tenths {
    width: 60%; }

  /* line 60, ../scss/generic/mixins/_widths.scss */
  .palm--four-fifths,
  .palm--eight-tenths {
    width: 80%; }

  /**
   * Sixths.
   */
  /* line 66, ../scss/generic/mixins/_widths.scss */
  .palm--one-sixth,
  .palm--two-twelfths {
    width: 16.66667%; }

  /* line 69, ../scss/generic/mixins/_widths.scss */
  .palm--five-sixths,
  .palm--ten-twelfths {
    width: 83.33333%; }

  /**
   * Eighths.
   */
  /* line 75, ../scss/generic/mixins/_widths.scss */
  .palm--one-eighth {
    width: 12.5%; }

  /* line 77, ../scss/generic/mixins/_widths.scss */
  .palm--three-eighths {
    width: 37.5%; }

  /* line 79, ../scss/generic/mixins/_widths.scss */
  .palm--five-eighths {
    width: 62.5%; }

  /* line 81, ../scss/generic/mixins/_widths.scss */
  .palm--seven-eighths {
    width: 87.5%; }

  /**
   * Ninths.
   */
  /* line 86, ../scss/generic/mixins/_widths.scss */
  .palm--one-ninth {
    width: 11.11111%; }

  /* line 88, ../scss/generic/mixins/_widths.scss */
  .palm--two-ninths {
    width: 22.22222%; }

  /* line 90, ../scss/generic/mixins/_widths.scss */
  .palm--four-ninths {
    width: 44.44444%; }

  /* line 92, ../scss/generic/mixins/_widths.scss */
  .palm--five-ninths {
    width: 55.55556%; }

  /* line 94, ../scss/generic/mixins/_widths.scss */
  .palm--seven-ninths {
    width: 77.77778%; }

  /* line 96, ../scss/generic/mixins/_widths.scss */
  .palm--eight-ninths {
    width: 88.88889%; }

  /**
   * Tenths.
   */
  /* line 101, ../scss/generic/mixins/_widths.scss */
  .palm--one-tenth {
    width: 10%; }

  /* line 103, ../scss/generic/mixins/_widths.scss */
  .palm--three-tenths {
    width: 30%; }

  /* line 105, ../scss/generic/mixins/_widths.scss */
  .palm--seven-tenths {
    width: 70%; }

  /* line 107, ../scss/generic/mixins/_widths.scss */
  .palm--nine-tenths {
    width: 90%; }

  /**
   * Twelfths.
   */
  /* line 112, ../scss/generic/mixins/_widths.scss */
  .palm--one-twelfth {
    width: 8.33333%; }

  /* line 114, ../scss/generic/mixins/_widths.scss */
  .palm--five-twelfths {
    width: 41.66667%; }

  /* line 116, ../scss/generic/mixins/_widths.scss */
  .palm--seven-twelfths {
    width: 58.33333%; }

  /* line 118, ../scss/generic/mixins/_widths.scss */
  .palm--eleven-twelfths {
    width: 91.66667%; } }
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  /**
   * Whole
   */
  /* line 11, ../scss/generic/mixins/_widths.scss */
  .lap--one-whole {
    width: 100%; }

  /**
   * Halves
   */
  /* line 17, ../scss/generic/mixins/_widths.scss */
  .lap--one-half,
  .lap--two-quarters,
  .lap--three-sixths,
  .lap--four-eighths,
  .lap--five-tenths,
  .lap--six-twelfths {
    width: 50%; }

  /**
   * Thirds.
   */
  /* line 27, ../scss/generic/mixins/_widths.scss */
  .lap--one-third,
  .lap--two-sixths,
  .lap--three-ninths,
  .lap--four-twelfths {
    width: 33.33333%; }

  /* line 32, ../scss/generic/mixins/_widths.scss */
  .lap--two-thirds,
  .lap--four-sixths,
  .lap--six-ninths,
  .lap--eight-twelfths {
    width: 66.66667%; }

  /**
   * Quarters.
   */
  /* line 40, ../scss/generic/mixins/_widths.scss */
  .lap--one-quarter,
  .lap--two-eighths,
  .lap--three-twelfths {
    width: 25%; }

  /* line 44, ../scss/generic/mixins/_widths.scss */
  .lap--three-quarters,
  .lap--six-eighths,
  .lap--nine-twelfths {
    width: 75%; }

  /**
   * Fifths.
   */
  /* line 51, ../scss/generic/mixins/_widths.scss */
  .lap--one-fifth,
  .lap--two-tenths {
    width: 20%; }

  /* line 54, ../scss/generic/mixins/_widths.scss */
  .lap--two-fifths,
  .lap--four-tenths {
    width: 40%; }

  /* line 57, ../scss/generic/mixins/_widths.scss */
  .lap--three-fifths,
  .lap--six-tenths {
    width: 60%; }

  /* line 60, ../scss/generic/mixins/_widths.scss */
  .lap--four-fifths,
  .lap--eight-tenths {
    width: 80%; }

  /**
   * Sixths.
   */
  /* line 66, ../scss/generic/mixins/_widths.scss */
  .lap--one-sixth,
  .lap--two-twelfths {
    width: 16.66667%; }

  /* line 69, ../scss/generic/mixins/_widths.scss */
  .lap--five-sixths,
  .lap--ten-twelfths {
    width: 83.33333%; }

  /**
   * Eighths.
   */
  /* line 75, ../scss/generic/mixins/_widths.scss */
  .lap--one-eighth {
    width: 12.5%; }

  /* line 77, ../scss/generic/mixins/_widths.scss */
  .lap--three-eighths {
    width: 37.5%; }

  /* line 79, ../scss/generic/mixins/_widths.scss */
  .lap--five-eighths {
    width: 62.5%; }

  /* line 81, ../scss/generic/mixins/_widths.scss */
  .lap--seven-eighths {
    width: 87.5%; }

  /**
   * Ninths.
   */
  /* line 86, ../scss/generic/mixins/_widths.scss */
  .lap--one-ninth {
    width: 11.11111%; }

  /* line 88, ../scss/generic/mixins/_widths.scss */
  .lap--two-ninths {
    width: 22.22222%; }

  /* line 90, ../scss/generic/mixins/_widths.scss */
  .lap--four-ninths {
    width: 44.44444%; }

  /* line 92, ../scss/generic/mixins/_widths.scss */
  .lap--five-ninths {
    width: 55.55556%; }

  /* line 94, ../scss/generic/mixins/_widths.scss */
  .lap--seven-ninths {
    width: 77.77778%; }

  /* line 96, ../scss/generic/mixins/_widths.scss */
  .lap--eight-ninths {
    width: 88.88889%; }

  /**
   * Tenths.
   */
  /* line 101, ../scss/generic/mixins/_widths.scss */
  .lap--one-tenth {
    width: 10%; }

  /* line 103, ../scss/generic/mixins/_widths.scss */
  .lap--three-tenths {
    width: 30%; }

  /* line 105, ../scss/generic/mixins/_widths.scss */
  .lap--seven-tenths {
    width: 70%; }

  /* line 107, ../scss/generic/mixins/_widths.scss */
  .lap--nine-tenths {
    width: 90%; }

  /**
   * Twelfths.
   */
  /* line 112, ../scss/generic/mixins/_widths.scss */
  .lap--one-twelfth {
    width: 8.33333%; }

  /* line 114, ../scss/generic/mixins/_widths.scss */
  .lap--five-twelfths {
    width: 41.66667%; }

  /* line 116, ../scss/generic/mixins/_widths.scss */
  .lap--seven-twelfths {
    width: 58.33333%; }

  /* line 118, ../scss/generic/mixins/_widths.scss */
  .lap--eleven-twelfths {
    width: 91.66667%; } }
@media only screen and (max-width: 1023px) {
  /**
   * Whole
   */
  /* line 11, ../scss/generic/mixins/_widths.scss */
  .portable--one-whole {
    width: 100%; }

  /**
   * Halves
   */
  /* line 17, ../scss/generic/mixins/_widths.scss */
  .portable--one-half,
  .portable--two-quarters,
  .portable--three-sixths,
  .portable--four-eighths,
  .portable--five-tenths,
  .portable--six-twelfths {
    width: 50%; }

  /**
   * Thirds.
   */
  /* line 27, ../scss/generic/mixins/_widths.scss */
  .portable--one-third,
  .portable--two-sixths,
  .portable--three-ninths,
  .portable--four-twelfths {
    width: 33.33333%; }

  /* line 32, ../scss/generic/mixins/_widths.scss */
  .portable--two-thirds,
  .portable--four-sixths,
  .portable--six-ninths,
  .portable--eight-twelfths {
    width: 66.66667%; }

  /**
   * Quarters.
   */
  /* line 40, ../scss/generic/mixins/_widths.scss */
  .portable--one-quarter,
  .portable--two-eighths,
  .portable--three-twelfths {
    width: 25%; }

  /* line 44, ../scss/generic/mixins/_widths.scss */
  .portable--three-quarters,
  .portable--six-eighths,
  .portable--nine-twelfths {
    width: 75%; }

  /**
   * Fifths.
   */
  /* line 51, ../scss/generic/mixins/_widths.scss */
  .portable--one-fifth,
  .portable--two-tenths {
    width: 20%; }

  /* line 54, ../scss/generic/mixins/_widths.scss */
  .portable--two-fifths,
  .portable--four-tenths {
    width: 40%; }

  /* line 57, ../scss/generic/mixins/_widths.scss */
  .portable--three-fifths,
  .portable--six-tenths {
    width: 60%; }

  /* line 60, ../scss/generic/mixins/_widths.scss */
  .portable--four-fifths,
  .portable--eight-tenths {
    width: 80%; }

  /**
   * Sixths.
   */
  /* line 66, ../scss/generic/mixins/_widths.scss */
  .portable--one-sixth,
  .portable--two-twelfths {
    width: 16.66667%; }

  /* line 69, ../scss/generic/mixins/_widths.scss */
  .portable--five-sixths,
  .portable--ten-twelfths {
    width: 83.33333%; }

  /**
   * Eighths.
   */
  /* line 75, ../scss/generic/mixins/_widths.scss */
  .portable--one-eighth {
    width: 12.5%; }

  /* line 77, ../scss/generic/mixins/_widths.scss */
  .portable--three-eighths {
    width: 37.5%; }

  /* line 79, ../scss/generic/mixins/_widths.scss */
  .portable--five-eighths {
    width: 62.5%; }

  /* line 81, ../scss/generic/mixins/_widths.scss */
  .portable--seven-eighths {
    width: 87.5%; }

  /**
   * Ninths.
   */
  /* line 86, ../scss/generic/mixins/_widths.scss */
  .portable--one-ninth {
    width: 11.11111%; }

  /* line 88, ../scss/generic/mixins/_widths.scss */
  .portable--two-ninths {
    width: 22.22222%; }

  /* line 90, ../scss/generic/mixins/_widths.scss */
  .portable--four-ninths {
    width: 44.44444%; }

  /* line 92, ../scss/generic/mixins/_widths.scss */
  .portable--five-ninths {
    width: 55.55556%; }

  /* line 94, ../scss/generic/mixins/_widths.scss */
  .portable--seven-ninths {
    width: 77.77778%; }

  /* line 96, ../scss/generic/mixins/_widths.scss */
  .portable--eight-ninths {
    width: 88.88889%; }

  /**
   * Tenths.
   */
  /* line 101, ../scss/generic/mixins/_widths.scss */
  .portable--one-tenth {
    width: 10%; }

  /* line 103, ../scss/generic/mixins/_widths.scss */
  .portable--three-tenths {
    width: 30%; }

  /* line 105, ../scss/generic/mixins/_widths.scss */
  .portable--seven-tenths {
    width: 70%; }

  /* line 107, ../scss/generic/mixins/_widths.scss */
  .portable--nine-tenths {
    width: 90%; }

  /**
   * Twelfths.
   */
  /* line 112, ../scss/generic/mixins/_widths.scss */
  .portable--one-twelfth {
    width: 8.33333%; }

  /* line 114, ../scss/generic/mixins/_widths.scss */
  .portable--five-twelfths {
    width: 41.66667%; }

  /* line 116, ../scss/generic/mixins/_widths.scss */
  .portable--seven-twelfths {
    width: 58.33333%; }

  /* line 118, ../scss/generic/mixins/_widths.scss */
  .portable--eleven-twelfths {
    width: 91.66667%; } }
@media only screen and (min-width: 1024px) {
  /**
   * Whole
   */
  /* line 11, ../scss/generic/mixins/_widths.scss */
  .desk--one-whole {
    width: 100%; }

  /**
   * Halves
   */
  /* line 17, ../scss/generic/mixins/_widths.scss */
  .desk--one-half,
  .desk--two-quarters,
  .desk--three-sixths,
  .desk--four-eighths,
  .desk--five-tenths,
  .desk--six-twelfths {
    width: 50%; }

  /**
   * Thirds.
   */
  /* line 27, ../scss/generic/mixins/_widths.scss */
  .desk--one-third,
  .desk--two-sixths,
  .desk--three-ninths,
  .desk--four-twelfths {
    width: 33.33333%; }

  /* line 32, ../scss/generic/mixins/_widths.scss */
  .desk--two-thirds,
  .desk--four-sixths,
  .desk--six-ninths,
  .desk--eight-twelfths {
    width: 66.66667%; }

  /**
   * Quarters.
   */
  /* line 40, ../scss/generic/mixins/_widths.scss */
  .desk--one-quarter,
  .desk--two-eighths,
  .desk--three-twelfths {
    width: 25%; }

  /* line 44, ../scss/generic/mixins/_widths.scss */
  .desk--three-quarters,
  .desk--six-eighths,
  .desk--nine-twelfths {
    width: 75%; }

  /**
   * Fifths.
   */
  /* line 51, ../scss/generic/mixins/_widths.scss */
  .desk--one-fifth,
  .desk--two-tenths {
    width: 20%; }

  /* line 54, ../scss/generic/mixins/_widths.scss */
  .desk--two-fifths,
  .desk--four-tenths {
    width: 40%; }

  /* line 57, ../scss/generic/mixins/_widths.scss */
  .desk--three-fifths,
  .desk--six-tenths {
    width: 60%; }

  /* line 60, ../scss/generic/mixins/_widths.scss */
  .desk--four-fifths,
  .desk--eight-tenths {
    width: 80%; }

  /**
   * Sixths.
   */
  /* line 66, ../scss/generic/mixins/_widths.scss */
  .desk--one-sixth,
  .desk--two-twelfths {
    width: 16.66667%; }

  /* line 69, ../scss/generic/mixins/_widths.scss */
  .desk--five-sixths,
  .desk--ten-twelfths {
    width: 83.33333%; }

  /**
   * Eighths.
   */
  /* line 75, ../scss/generic/mixins/_widths.scss */
  .desk--one-eighth {
    width: 12.5%; }

  /* line 77, ../scss/generic/mixins/_widths.scss */
  .desk--three-eighths {
    width: 37.5%; }

  /* line 79, ../scss/generic/mixins/_widths.scss */
  .desk--five-eighths {
    width: 62.5%; }

  /* line 81, ../scss/generic/mixins/_widths.scss */
  .desk--seven-eighths {
    width: 87.5%; }

  /**
   * Ninths.
   */
  /* line 86, ../scss/generic/mixins/_widths.scss */
  .desk--one-ninth {
    width: 11.11111%; }

  /* line 88, ../scss/generic/mixins/_widths.scss */
  .desk--two-ninths {
    width: 22.22222%; }

  /* line 90, ../scss/generic/mixins/_widths.scss */
  .desk--four-ninths {
    width: 44.44444%; }

  /* line 92, ../scss/generic/mixins/_widths.scss */
  .desk--five-ninths {
    width: 55.55556%; }

  /* line 94, ../scss/generic/mixins/_widths.scss */
  .desk--seven-ninths {
    width: 77.77778%; }

  /* line 96, ../scss/generic/mixins/_widths.scss */
  .desk--eight-ninths {
    width: 88.88889%; }

  /**
   * Tenths.
   */
  /* line 101, ../scss/generic/mixins/_widths.scss */
  .desk--one-tenth {
    width: 10%; }

  /* line 103, ../scss/generic/mixins/_widths.scss */
  .desk--three-tenths {
    width: 30%; }

  /* line 105, ../scss/generic/mixins/_widths.scss */
  .desk--seven-tenths {
    width: 70%; }

  /* line 107, ../scss/generic/mixins/_widths.scss */
  .desk--nine-tenths {
    width: 90%; }

  /**
   * Twelfths.
   */
  /* line 112, ../scss/generic/mixins/_widths.scss */
  .desk--one-twelfth {
    width: 8.33333%; }

  /* line 114, ../scss/generic/mixins/_widths.scss */
  .desk--five-twelfths {
    width: 41.66667%; }

  /* line 116, ../scss/generic/mixins/_widths.scss */
  .desk--seven-twelfths {
    width: 58.33333%; }

  /* line 118, ../scss/generic/mixins/_widths.scss */
  .desk--eleven-twelfths {
    width: 91.66667%; } }
/*------------------------------------*\
    PUSH
\*------------------------------------*/
/**
 * Push classes, to move grid items over to the right by certain amounts.
 */
/*------------------------------------*\
    PULL
\*------------------------------------*/
/**
 * Pull classes, to move grid items back to the left by certain amounts.
 */
/*------------------------------------*\
    $Buttons
\*------------------------------------*/
/**
 * Base button styles
 */
/* line 8, ../scss/components/_buttons.scss */
.button {
  display: inline-block;
  font-weight: 500;
  line-height: 1.42857143;
  white-space: nowrap;
  vertical-align: middle;
  text-align: center;
  cursor: pointer;
  background-image: none;
  border: 2px solid transparent;
  /* 3 */
  /* 3 */
  /* 4 */
  /* 6 */
  /* 6 */
  /* 7 */
  /* 4 */
  /* 6 */
  /* 6 */
  /* 7 */
  padding: 6px 18px;
  /* 9 */
  padding: 0.31579rem 0.94737rem;
  /* 9 */
  font-size: 16px;
  font-size: 0.84211rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
  -moz-border-radius: 2px;
  -webkit-border-radius: 2px;
  border-radius: 2px;
  	/**
  	 * Button size modifiers
  	 *
  	 * These all follow the same sizing rules as above; text is 1em, space around it
       * remains uniform.
  	 */
  /**
   * These buttons will fill the entirety of their container.
   *
   * 1. Remove padding so that widths and paddings don’t conflict.
   */
  /**
   * Button font-size modifiers.
   */
  /**
   * Positive actions; e.g. sign in, purchase, submit, etc.
   */
  /**
   * Negative actions; e.g. close account, delete photo, remove friend, etc.
   */
  /**
   * Inactive, disabled buttons.
   */ }
  /* line 34, ../scss/components/_buttons.scss */
  .button--small {
    font-size: 14px;
    line-height: 1.5;
    -moz-border-radius: 3px;
    -webkit-border-radius: 3px;
    border-radius: 3px;
    /* 3 */
    /* 3 */
    /* 4 */
    /* 6 */
    /* 6 */
    /* 7 */
    /* 4 */
    /* 6 */
    /* 6 */
    /* 7 */
    padding: 5px 10px;
    /* 9 */
    padding: 0.26316rem 0.52632rem;
    /* 9 */ }
  /* line 41, ../scss/components/_buttons.scss */
  .button--large {
    font-size: 18px;
    line-height: 1.33;
    /* 3 */
    /* 3 */
    /* 4 */
    /* 6 */
    /* 6 */
    /* 7 */
    /* 4 */
    /* 6 */
    /* 6 */
    /* 7 */
    padding: 10px 16px;
    /* 9 */
    padding: 0.52632rem 0.84211rem;
    /* 9 */ }
  /* line 52, ../scss/components/_buttons.scss */
  .button--full {
    width: 100%;
    padding-right: 0;
    /* [1] */
    padding-left: 0;
    /* [1] */
    text-align: center; }
  /* line 62, ../scss/components/_buttons.scss */
  .button--alpha {
    /* 3 */
    /* 3 */
    /* 4 */
    /* 6 */
    /* 6 */
    /* 7 */
    font-size: 30px;
    /* 9 */
    font-size: 1.57895rem;
    /* 9 */ }
  /* line 66, ../scss/components/_buttons.scss */
  .button--beta {
    /* 3 */
    /* 3 */
    /* 4 */
    /* 6 */
    /* 6 */
    /* 7 */
    font-size: 24px;
    /* 9 */
    font-size: 1.26316rem;
    /* 9 */ }
  /* line 70, ../scss/components/_buttons.scss */
  .button--gamma {
    /* 3 */
    /* 3 */
    /* 4 */
    /* 6 */
    /* 6 */
    /* 7 */
    font-size: 16px;
    /* 9 */
    font-size: 0.84211rem;
    /* 9 */ }
  /* line 77, ../scss/components/_buttons.scss */
  .button--positive {
    background-color: #4a993e;
    border-color: #38752f; }
    /* line 89, ../scss/components/_buttons.scss */
    .button--positive:hover {
      background-color: #38752f; }
  /* line 97, ../scss/components/_buttons.scss */
  .button--negative {
    background-color: #b33630;
    border-color: #8b2a25; }
    /* line 110, ../scss/components/_buttons.scss */
    .button--negative:hover {
      background-color: #8b2a25; }

/* line 128, ../scss/components/_buttons.scss */
.button-group {
  position: relative;
  display: inline-block;
  vertical-align: middle; }
  /* line 133, ../scss/components/_buttons.scss */
  .button-group + .button-group {
    margin-left: 10px; }
  /* line 137, ../scss/components/_buttons.scss */
  .button-group > .button {
    position: relative;
    float: left; }
  /* line 143, ../scss/components/_buttons.scss */
  .button-group > .button:first-child:not(:last-child):not(.button--dropdown) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0; }
  /* line 147, ../scss/components/_buttons.scss */
  .button-group > .button:last-child:not(:first-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0; }
  /* line 152, ../scss/components/_buttons.scss */
  .button-group > .button--dropdown:not(:first-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0; }
  /* line 157, ../scss/components/_buttons.scss */
  .button-group .button + .dropdown-toggle {
    padding-right: 8px;
    padding-left: 8px;
    margin-left: -1px; }

/* line 164, ../scss/components/_buttons.scss */
.button .caret {
  margin-left: 0; }

/* line 168, ../scss/components/_buttons.scss */
.caret {
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 2px;
  vertical-align: middle;
  border-top: 4px solid;
  border-right: 4px solid transparent;
  border-left: 4px solid transparent; }

/**
 * Base button states
 */
/* line 186, ../scss/components/_buttons.scss */
.button,
.button:hover,
.button:focus,
.button:active,
.button:visited {
  color: #6d6e71;
  text-decoration: none; }
/* line 195, ../scss/components/_buttons.scss */
.button:hover {
  background-color: #d7d7d7;
  box-shadow: 0 0 1px rgba(0, 0, 0, 0.3); }
/* line 200, ../scss/components/_buttons.scss */
.button:active,
.button:focus {
  outline: none;
  box-shadow: 0 0 2px rgba(0, 0, 0, 0.3) inset; }
/* line 206, ../scss/components/_buttons.scss */
.button:focus {
  outline: thin dotted #333;
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px; }
/* line 210, ../scss/components/_buttons.scss */
.button:active {
  background-image: none; }
/* line 214, ../scss/components/_buttons.scss */
.button::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Button Functions
 */
/**
 * Use to extend the inactive/disabled states: sass cannot extend a
 * nested property so this is a temporary hack
 *
 * 1. Make the button look like normal text when hovered.
 */
/* line 237, ../scss/components/_buttons.scss */
.button--inactive,
.button--inactive:hover,
.button--inactive:active,
.button--inactive:focus, button[disabled], button[disabled]:hover, button[disabled]:active, button[disabled]:focus,
input[disabled],
input[disabled]:hover,
input[disabled]:active,
input[disabled]:focus,
.button--disabled,
.button--disabled:hover,
.button--disabled:active,
.button--disabled:focus {
  background-color: #ddd;
  color: #777 !important;
  cursor: text;
  /* [1] */
  box-shadow: none; }

/* line 248, ../scss/components/_buttons.scss */
button[disabled], button[disabled]:hover, button[disabled]:active, button[disabled]:focus,
input[disabled],
input[disabled]:hover,
input[disabled]:active,
input[disabled]:focus,
.button--disabled,
.button--disabled:hover,
.button--disabled:active,
.button--disabled:focus {
  cursor: not-allowed; }

/*------------------------------------*\
    $NAV
\*------------------------------------*/
/**
 * Nav abstraction as per: csswizardry.com/2011/09/the-nav-abstraction
 * When used on an `ol` or `ul`, this class throws the list into horizontal mode
 * e.g.:
 *
   <ul class=nav>
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 * Demo: jsfiddle.net/inuitcss/Vnph4
 *
 */
/* line 27, ../scss/components/_navs.scss */
.nav > li,
.nav > li > a {
  display: inline-block;
  *display: inline;
  zoom: 1; }

/**
 * `.nav--stacked` extends `.nav` and throws the list into vertical mode, e.g.:
 *
   <ul class="nav  nav--stacked">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 */
/* line 50, ../scss/components/_navs.scss */
.nav--stacked > li {
  display: list-item; }
  /* line 53, ../scss/components/_navs.scss */
  .nav--stacked > li > a {
    display: block; }

/**
 * `.nav--banner` extends `.nav` and centres the list, e.g.:
 *
   <ul class="nav  nav--banner">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 */
/* line 71, ../scss/components/_navs.scss */
.nav--banner {
  text-align: center; }

/**
 * Give nav links a big, blocky hit area. Extends `.nav`, e.g.:
 *
   <ul class="nav  nav--block">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 */
/* line 87, ../scss/components/_navs.scss */
.nav--block {
  line-height: 1;
  /**
   * Remove whitespace caused by `inline-block`.
   */
  letter-spacing: -.31em;
  word-spacing: -.43em;
  white-space: nowrap; }
  /* line 96, ../scss/components/_navs.scss */
  .nav--block > li {
    letter-spacing: normal;
    word-spacing: normal; }
    /* line 100, ../scss/components/_navs.scss */
    .nav--block > li > a {
      padding: 15px;
      padding: 1rem; }

/**
 * Force a nav to occupy 100% of the available width of its parent. Extends
 * `.nav`, e.g.:
 *
   <ul class="nav  nav--fit">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 * Thanks to @pimpl for this idea!
 */
/* line 120, ../scss/components/_navs.scss */
.nav--fit {
  display: table;
  width: 100%; }
  /* line 124, ../scss/components/_navs.scss */
  .nav--fit > li {
    display: table-cell; }
    /* line 127, ../scss/components/_navs.scss */
    .nav--fit > li > a {
      display: block; }

/**
 * Make a list of keywords. Extends `.nav`, e.g.:
 *
   `<ul class="nav  nav--keywords>`
 *
 */
/* line 144, ../scss/components/_navs.scss */
.nav--keywords > li:after {
  content: "\002C" "\00A0"; }
/* line 148, ../scss/components/_navs.scss */
.nav--keywords > li:last-child:after {
  display: none; }

/*------------------------------------*\
    $BREADCRUMBS
\*------------------------------------*/
/* line 5, ../scss/components/_breadcrumbs.scss */
.breadcrumb {
  font-size: 80%;
  font-weight: 500; }

/* line 10, ../scss/components/_breadcrumbs.scss */
.breadcrumb > li:after {
  content: "\002F" "\00A0"; }

/**
 * Style trumps; helper and brand classes
 */
/*------------------------------------*\
    #SPACING
\*------------------------------------*/
/**
 * Margin and padding helper classes. 
 *
 * `.(m|p)(t|r|b|L|e|s)(-|+|0) {}` = margin/padding top/right/bottom/left/ends/sides less/more/none
 */
/**
 * Add margins.
 */
/* line 37, ../scss/generic/_spacing.scss */
.m {
  margin: 29px; }

/* line 38, ../scss/generic/_spacing.scss */
.mt {
  margin-top: 29px; }

/* line 39, ../scss/generic/_spacing.scss */
.mr {
  margin-right: 29px; }

/* line 40, ../scss/generic/_spacing.scss */
.mb, .callout {
  margin-bottom: 29px; }

/* line 41, ../scss/generic/_spacing.scss */
.ml {
  margin-left: 29px; }

/* line 42, ../scss/generic/_spacing.scss */
.me {
  margin-top: 29px;
  margin-bottom: 29px; }

/* line 43, ../scss/generic/_spacing.scss */
.ms {
  margin-right: 29px;
  margin-left: 29px; }

/**
 * Tiny margins.
 */
/* line 53, ../scss/generic/_spacing.scss */
.m-- {
  margin: 7px; }

/* line 54, ../scss/generic/_spacing.scss */
.mt-- {
  margin-top: 7px; }

/* line 55, ../scss/generic/_spacing.scss */
.mr-- {
  margin-right: 7px; }

/* line 56, ../scss/generic/_spacing.scss */
.mb-- {
  margin-bottom: 7px; }

/* line 57, ../scss/generic/_spacing.scss */
.ml-- {
  margin-left: 7px; }

/* line 58, ../scss/generic/_spacing.scss */
.ms-- {
  margin-top: 7px;
  margin-bottom: 7px; }

/* line 59, ../scss/generic/_spacing.scss */
.me-- {
  margin-right: 7px;
  margin-left: 7px; }

/**
* Small margins.
*/
/* line 68, ../scss/generic/_spacing.scss */
.m- {
  margin: 15px; }

/* line 69, ../scss/generic/_spacing.scss */
.mt- {
  margin-top: 15px; }

/* line 70, ../scss/generic/_spacing.scss */
.mr- {
  margin-right: 15px; }

/* line 71, ../scss/generic/_spacing.scss */
.mb- {
  margin-bottom: 15px; }

/* line 72, ../scss/generic/_spacing.scss */
.ml- {
  margin-left: 15px; }

/* line 73, ../scss/generic/_spacing.scss */
.me- {
  margin-top: 15px;
  margin-bottom: 15px; }

/* line 74, ../scss/generic/_spacing.scss */
.ms- {
  margin-right: 15px;
  margin-left: 15px; }

/**
 * Large Margins.
 */
/* line 84, ../scss/generic/_spacing.scss */
.m_x {
  margin: 58px; }

/* line 85, ../scss/generic/_spacing.scss */
.mt_x {
  margin-top: 58px; }

/* line 86, ../scss/generic/_spacing.scss */
.mr_x {
  margin-right: 58px; }

/* line 87, ../scss/generic/_spacing.scss */
.mb_x {
  margin-bottom: 58px; }

/* line 88, ../scss/generic/_spacing.scss */
.ml_x {
  margin-left: 58px; }

/* line 89, ../scss/generic/_spacing.scss */
.me_x {
  margin-top: 58px;
  margin-bottom: 58px; }

/* line 90, ../scss/generic/_spacing.scss */
.ms_x {
  margin-right: 58px;
  margin-left: 58px; }

/**
 * Remove margins.
 */
/* line 115, ../scss/generic/_spacing.scss */
.m0, .slider__item {
  margin: 0; }

/* line 116, ../scss/generic/_spacing.scss */
.mt0 {
  margin-top: 0; }

/* line 117, ../scss/generic/_spacing.scss */
.mr0 {
  margin-right: 0; }

/* line 118, ../scss/generic/_spacing.scss */
.mb0 {
  margin-bottom: 0; }

/* line 119, ../scss/generic/_spacing.scss */
.ml0 {
  margin-left: 0; }

/* line 120, ../scss/generic/_spacing.scss */
.me0 {
  margin-top: 0;
  margin-bottom: 0; }

/* line 121, ../scss/generic/_spacing.scss */
.ms0 {
  margin-right: 0;
  margin-left: 0; }

/**
 * Add paddings.
 */
/* line 135, ../scss/generic/_spacing.scss */
.p {
  padding: 29px; }

/* line 136, ../scss/generic/_spacing.scss */
.pt {
  padding-top: 29px; }

/* line 137, ../scss/generic/_spacing.scss */
.pr {
  padding-right: 29px; }

/* line 138, ../scss/generic/_spacing.scss */
.pb, .global-footer > nav, .global-footer .copy, .primary-search__results h3 {
  padding-bottom: 29px; }

/* line 139, ../scss/generic/_spacing.scss */
.pl {
  padding-left: 29px; }

/* line 140, ../scss/generic/_spacing.scss */
.pe {
  padding-top: 29px;
  padding-bottom: 29px; }

/* line 141, ../scss/generic/_spacing.scss */
.ps {
  padding-right: 29px;
  padding-left: 29px; }

/**
 * Tiny paddings.
 */
/* line 150, ../scss/generic/_spacing.scss */
.p--, .primary-search--dropdown {
  padding: 7px; }

/* line 151, ../scss/generic/_spacing.scss */
.pt-- {
  padding-top: 7px; }

/* line 152, ../scss/generic/_spacing.scss */
.pr-- {
  padding-right: 7px; }

/* line 153, ../scss/generic/_spacing.scss */
.pb-- {
  padding-bottom: 7px; }

/* line 154, ../scss/generic/_spacing.scss */
.pl-- {
  padding-left: 7px; }

/* line 155, ../scss/generic/_spacing.scss */
.pe-- {
  padding-top: 7px;
  padding-bottom: 7px; }

/* line 156, ../scss/generic/_spacing.scss */
.ps--, .global-footer > nav a {
  padding-right: 7px;
  padding-left: 7px; }

/**
 * Small paddings.
 */
/* line 165, ../scss/generic/_spacing.scss */
.p- {
  padding: 15px; }

/* line 166, ../scss/generic/_spacing.scss */
.pt- {
  padding-top: 15px; }

/* line 167, ../scss/generic/_spacing.scss */
.pr- {
  padding-right: 15px; }

/* line 168, ../scss/generic/_spacing.scss */
.pb- {
  padding-bottom: 15px; }

/* line 169, ../scss/generic/_spacing.scss */
.pl- {
  padding-left: 15px; }

/* line 170, ../scss/generic/_spacing.scss */
.pe- {
  padding-top: 15px;
  padding-bottom: 15px; }

/* line 171, ../scss/generic/_spacing.scss */
.ps- {
  padding-right: 15px;
  padding-left: 15px; }

/**
 * Large paddings.
 */
/* line 180, ../scss/generic/_spacing.scss */
.p_x {
  padding: 58px; }

/* line 181, ../scss/generic/_spacing.scss */
.pt_x {
  padding-top: 58px; }

/* line 182, ../scss/generic/_spacing.scss */
.pr_x {
  padding-right: 58px; }

/* line 183, ../scss/generic/_spacing.scss */
.pb_x {
  padding-bottom: 58px; }

/* line 184, ../scss/generic/_spacing.scss */
.pl_x {
  padding-left: 58px; }

/* line 185, ../scss/generic/_spacing.scss */
.pe_x {
  padding-top: 58px;
  padding-bottom: 58px; }

/* line 186, ../scss/generic/_spacing.scss */
.ps_x {
  padding-right: 58px;
  padding-left: 58px; }

/**
 * Remove paddings.
 */
/* line 210, ../scss/generic/_spacing.scss */
.p0 {
  padding: 0; }

/* line 211, ../scss/generic/_spacing.scss */
.pt0 {
  padding-top: 0; }

/* line 212, ../scss/generic/_spacing.scss */
.pr0 {
  padding-right: 0; }

/* line 213, ../scss/generic/_spacing.scss */
.pb0 {
  padding-bottom: 0; }

/* line 214, ../scss/generic/_spacing.scss */
.pl0, .pullquote {
  padding-left: 0; }

/* line 215, ../scss/generic/_spacing.scss */
.pe0 {
  padding-top: 0;
  padding-bottom: 0; }

/* line 216, ../scss/generic/_spacing.scss */
.ps0 {
  padding-right: 0;
  padding-left: 0; }

/**
 * Begin importing custom stuff here.
 */
/**
 * Primary site colors and fonts
 */
/*------------------------------------*\
    $FONTS
\*------------------------------------*/
/**
 * As of now this is where we will be placing our icon fonts. 
 * Freight Sans Pro will be served up from Typekit. 
 */
@font-face {
  font-family: 'cruicons';
  src: url("http://cruglobal.github.io/nav-prototypesfonts/cruicons.eot?13550619");
  src: url("http://cruglobal.github.io/nav-prototypes/fonts/cruicons.eot?13550619#iefix") format("embedded-opentype"), url("http://cruglobal.github.io/nav-prototypes/fonts/cruicons.woff?13550619") format("woff"), url("http://cruglobal.github.io/nav-prototypes/fonts/cruicons.ttf?13550619") format("truetype"), url("http://cruglobal.github.io/nav-prototypes/fonts/cruicons.svg?13550619#cruicons") format("svg");
  font-weight: normal;
  font-style: normal; }
/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */
/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */
/*
@media screen and (-webkit-min-device-pixel-ratio:0) {
  @font-face {
    font-family: 'cruicons';
    src: url('../font/cruicons.svg?54093663#cruicons') format('svg');
  }
}
*/
/* line 30, ../scss/elements/_fonts.scss */
[class^="icon-"], [class*=" icon-"] {
  font-family: "cruicons";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  /* opacity: .8; */
  /* For safety - reset parent styles, that can break glyph codes*/
  font-variant: normal;
  text-transform: none;
  /* fix buttons height, for twitter bootstrap */
  line-height: 1em;
  /* Animation center compensation - margins should be symmetric */
  /* remove if not needed */
  margin-left: .2em;
  /* you can be more comfortable with increased icons size */
  /* font-size: 120%; */
  /* Uncomment for 3D effect */
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */ }

/* line 61, ../scss/elements/_fonts.scss */
.icon-info-circled:before {
  content: '\e808'; }

/* '' */
/* line 62, ../scss/elements/_fonts.scss */
.icon-right-circle:before, .affordance:after {
  content: '\e800'; }

/* '' */
/* line 63, ../scss/elements/_fonts.scss */
.icon-left-arrow:before {
  content: '\e80e'; }

/* '' */
/* line 64, ../scss/elements/_fonts.scss */
.icon-right-arrow:before {
  content: '\e80d'; }

/* '' */
/* line 65, ../scss/elements/_fonts.scss */
.icon-up-arrow:before {
  content: '\e80c'; }

/* '' */
/* line 66, ../scss/elements/_fonts.scss */
.icon-twitter:before {
  content: '\e801'; }

/* '' */
/* line 67, ../scss/elements/_fonts.scss */
.icon-facebook:before {
  content: '\e802'; }

/* '' */
/* line 68, ../scss/elements/_fonts.scss */
.icon-down-arrow:before {
  content: '\e80f'; }

/* '' */
/* line 69, ../scss/elements/_fonts.scss */
.icon-location:before {
  content: '\e806'; }

/* '' */
/* line 70, ../scss/elements/_fonts.scss */
.icon-hamburger:before {
  content: '\e805'; }

/* '' */
/* line 71, ../scss/elements/_fonts.scss */
.icon-mail:before {
  content: '\e807'; }

/* '' */
/* line 72, ../scss/elements/_fonts.scss */
.icon-search:before {
  content: '\e804'; }

/* '' */
/* line 73, ../scss/elements/_fonts.scss */
.icon-tag:before {
  content: '\e811'; }

/* '' */
/* line 74, ../scss/elements/_fonts.scss */
.icon-comment-1:before {
  content: '\e812'; }

/* '' */
/* line 75, ../scss/elements/_fonts.scss */
.icon-gplus:before {
  content: '\e803'; }

/* '' */
/* line 76, ../scss/elements/_fonts.scss */
.icon-cancel-circled:before {
  content: '\e809'; }

/* '' */
/*------------------------------------*\
    $COLORS
\*------------------------------------*/
/**
 * Classes allow for color-sharing
 */
/**
 * Border Colors
 */
/* line 11, ../scss/elements/_colors.scss */
.color-border-base {
  border-color: #cccccc; }

/* line 12, ../scss/elements/_colors.scss */
.color-border-gold {
  border-color: #ffd014; }

/* line 13, ../scss/elements/_colors.scss */
.color-border-ui {
  border-color: #e9e9e9; }

/* line 14, ../scss/elements/_colors.scss */
.color-border-ui-dark {
  border-color: #ddd; }

/**
 * Font Colors
 */
/* line 21, ../scss/elements/_colors.scss */
.text-base, .primary-search__results--item > a {
  color: #353535; }

/* line 22, ../scss/elements/_colors.scss */
.text-white,
.button--positive,
.button--positive:hover,
.button--positive:focus,
.button--positive:active,
.button--positive:visited,
.button--negative,
.button--negative:hover,
.button--negative:focus,
.button--negative:active,
.button--negative:visited, .slider-control:hover i {
  color: white; }

/**
 * Primary Colors
 */
/* line 28, ../scss/elements/_colors.scss */
.color-gold {
  background-color: #ffd014; }

/* line 29, ../scss/elements/_colors.scss */
.color-gray {
  background-color: #666062; }

/* line 30, ../scss/elements/_colors.scss */
.color-white {
  background-color: white; }

/**
 * Secondary Colors
 */
/* line 36, ../scss/elements/_colors.scss */
.color-orange {
  background-color: #dd7d1b; }

/**
 * Accent Colors
 */
/* line 43, ../scss/elements/_colors.scss */
.color-bright-blue {
  background-color: #3eb1c8; }

/* line 44, ../scss/elements/_colors.scss */
.color-deep-blue {
  background-color: #007398; }

/**
 *  Additional Colors
 */
/* line 52, ../scss/elements/_colors.scss */
.color-accent-bg {
  background-color: #f2f2f2; }

/* line 53, ../scss/elements/_colors.scss */
.color-darker-gray {
  background-color: #333333; }

/**
 * Overall site and layout
 */
/*------------------------------------*\
    $PAGE
\*------------------------------------*/
/* line 5, ../scss/elements/_page.scss */
.preload {
  display: none !important; }

/* line 9, ../scss/elements/_page.scss */
.page-content {
  padding-top: 116px;
  padding-top: 6.10526rem; }

@media screen and (max-width: 31.25em) {
  /* line 13, ../scss/elements/_page.scss */
  .background-size-contain.layout-single-column {
    margin-left: 0;
    margin-right: 0; } }

@media screen and (min-width: 61.3125em) {
  /* line 23, ../scss/elements/_page.scss */
  .home-banner .h4, .home-banner a {
    display: inline-block; } }

@media screen and (min-width: 61.3125em) {
  /* line 30, ../scss/elements/_page.scss */
  .callout {
    margin-bottom: 0; } }

@media screen and (min-width: 61.3125em) {
  /* line 38, ../scss/elements/_page.scss */
  .callout-button {
    text-align: left; } }

/**
 * A different type of <hr> styling. 
 */
/*hr.section-divider{
	display: block;
	width: 14%;
	margin: 50px auto 40px auto;
	border: 0;
	border-top: 1px solid #dddddd;
}*/
/* line 56, ../scss/elements/_page.scss */
hr, .divider {
  clear: both;
  display: block; }

/** 
 * The primary hr, small width 
 */
/* line 66, ../scss/elements/_page.scss */
hr {
  width: 14%; }

/** 
 * Full width hr 
 */
/* hr */
/* line 75, ../scss/elements/_page.scss */
.divider {
  width: 100%; }

/*------------------------------------*\
    $LAYOUTS
\*------------------------------------*/
/* line 5, ../scss/elements/_layouts.scss */
.base-layout, .layout-single-column, .layout--wide {
  width: auto;
  margin-left: 20px;
  margin-right: 20px;
  clear: both; }
  @media screen and (min-width: 42.5em) {
    /* line 5, ../scss/elements/_layouts.scss */
    .base-layout, .layout-single-column, .layout--wide {
      margin-left: auto;
      margin-right: auto; } }

@media screen and (min-width: 42.5em) {
  /* line 18, ../scss/elements/_layouts.scss */
  .layout-single-column, .layout--wide {
    width: 640px; } }
@media screen and (min-width: 50em) {
  /* line 18, ../scss/elements/_layouts.scss */
  .layout-single-column, .layout--wide {
    width: 700px; } }

@media screen and (min-width: 64em) {
  /* line 30, ../scss/elements/_layouts.scss */
  .layout--wide {
    width: 880px; } }

/* line 38, ../scss/elements/_layouts.scss */
.layout--full {
  max-width: 1100px; }

/**
 * The wrapper class for full-width images
 */
/* line 47, ../scss/elements/_layouts.scss */
.layout-background-fill {
  position: relative;
  left: 0;
  overflow: hidden;
  max-width: 100%;
  width: 100%;
  margin-top: 0;
  /* 3 */
  /* 3 */
  /* 4 */
  /* 6 */
  /* 6 */
  /* 7 */
  top: -25px;
  /* 9 */
  top: -1.31579rem;
  /* 9 */ }

@media screen and (max-width: 31.25em) {
  /* line 60, ../scss/elements/_layouts.scss */
  .layout-background-stretch {
    /* 3 */
    /* 3 */
    /* 4 */
    /* 6 */
    /* 6 */
    /* 7 */
    margin-left: -29px;
    /* 9 */
    margin-left: -1.52632rem;
    /* 9 */
    /* 3 */
    /* 3 */
    /* 4 */
    /* 6 */
    /* 6 */
    /* 7 */
    margin-right: -29px;
    /* 9 */
    margin-right: -1.52632rem;
    /* 9 */ } }

/**
 * Site-wide elements and components
 */
/*------------------------------------*\
    $TEXT
\*------------------------------------*/
/* line 5, ../scss/elements/_text.scss */
abbr[title="required"], abbr[title="Required"] {
  border: 0;
  color: #d95c5c; }

/* line 10, ../scss/elements/_text.scss */
b, strong {
  font-weight: 600; }

/* line 14, ../scss/elements/_text.scss */
figure {
  position: relative; }

/* line 18, ../scss/elements/_text.scss */
figcaption {
  line-height: 1.6;
  /* 3 */
  /* 3 */
  /* 4 */
  /* 6 */
  /* 6 */
  /* 7 */
  /* 4 */
  /* 5 */
  /* 4 */
  /* 6 */
  /* 6 */
  /* 7 */
  margin: 5px 0 15px;
  /* 9 */
  margin: 0.26316rem 0 0.78947rem;
  /* 9 */
  font-size: 14px;
  font-size: 0.73684rem; }

/* line 25, ../scss/elements/_text.scss */
.dark-link {
  color: #353535; }

/* line 32, ../scss/elements/_text.scss */
.block-link:hover {
  text-decoration: none;
  background-color: #f2f2f2; }

/**
 * Places a dash after a piece of text. Mainly for post meta info
 * 
 */
/* line 44, ../scss/elements/_text.scss */
.accent + .accent:before {
  content: "\2013";
  /* 3 */
  /* 3 */
  /* 4 */
  /* 6 */
  /* 6 */
  /* 7 */
  margin-left: 12px;
  /* 9 */
  margin-left: 0.63158rem;
  /* 9 */
  /* 3 */
  /* 3 */
  /* 4 */
  /* 6 */
  /* 6 */
  /* 7 */
  margin-right: 12px;
  /* 9 */
  margin-right: 0.63158rem;
  /* 9 */ }

/* line 53, ../scss/elements/_text.scss */
.affordance:after {
  color: #ffd014;
  font-family: "cruicons";
  padding-left: 10px;
  font-size: 18px; }

/* line 63, ../scss/elements/_text.scss */
blockquote {
  font-weight: 300;
  letter-spacing: .01rem;
  font-style: italic;
  border-left: 3px solid #ffd014;
  margin-left: -26px;
  padding-bottom: 3px;
  /* 3 */
  /* 3 */
  /* 4 */
  /* 6 */
  /* 6 */
  /* 7 */
  padding-left: 28px;
  /* 9 */
  padding-left: 1.47368rem;
  /* 9 */
  font-size: 21px;
  font-size: 1.10526rem;
  line-height: 1.38095; }

/* line 76, ../scss/elements/_text.scss */
.pullquote {
  border-left-color: transparent;
  margin: 48px 0;
  text-align: center;
  -webkit-transition: margin 0.1s;
  -moz-transition: margin 0.1s;
  -ms-transition: margin 0.1s;
  -o-transition: margin 0.1s;
  transition: margin 0.1s; }
  @media screen and (min-width: 31.3125em) {
    /* line 76, ../scss/elements/_text.scss */
    .pullquote {
      margin: 48px -10px; } }
  @media screen and (min-width: 62.5625em) {
    /* line 76, ../scss/elements/_text.scss */
    .pullquote {
      margin: 48px -100px; } }
  /* line 93, ../scss/elements/_text.scss */
  .pullquote em, .pullquote strong {
    font-weight: 500;
    font-style: normal;
    font-size: 110%; }

/* line 100, ../scss/elements/_text.scss */
q {
  quotes: "“" "”";
  /**
   * If an element opens with an inline quote, let’s hang that.
   */ }
  /* line 103, ../scss/elements/_text.scss */
  q:before {
    content: "“";
    content: open-quote; }
  /* line 108, ../scss/elements/_text.scss */
  q:after {
    content: "“";
    content: close-quote; }
  /* line 113, ../scss/elements/_text.scss */
  q q:before {
    content: "“";
    content: open-quote; }
  /* line 118, ../scss/elements/_text.scss */
  q q:after {
    content: "“";
    content: close-quote; }
  /* line 126, ../scss/elements/_text.scss */
  q.opener {
    display: inline-block;
    text-indent: -0.22em; }
  /* line 132, ../scss/elements/_text.scss */
  q:first-child {
    display: inline-block;
    text-indent: 0; }

/*------------------------------------*\
    $BUTTONS
\*------------------------------------*/
/** 
 * Use this mixin to quickly pump out buttons:
 * @mixin btn($background, $border, $color:inherit).
 *
 * Change the hover and other states with:;
 * @mixin btn-effects($background, $border, $color:inherit).
 * 
 * Quick note: it will not work with transparency due to
 * the hover states. 
 */
/* line 16, ../scss/elements/_buttons.scss */
.button-group .button {
  margin-bottom: 7px;
  margin-bottom: 0rem; }

/* line 39, ../scss/generic/mixins/_buttons.scss */
.button--primary:hover, .button--primary:focus, .button--primary:active, .button--primary.active, .open .button--primary.dropdown-toggle {
  background-color: #eabb00;
  border-color: #bc9700;
  color: white; }
/* line 24, ../scss/elements/_buttons.scss */
.button--primary, .button--primary:active, .button--primary:focus {
  background-color: #ffd014;
  border-color: #fac800;
  color: white !important; }
  /* line 14, ../scss/generic/mixins/_buttons.scss */
  .button--primary:active, .button--primary.active, .button--primary:active:active, .button--primary:active.active, .button--primary:focus:active, .button--primary:focus.active {
    background-image: none; }
  /* line 22, ../scss/generic/mixins/_buttons.scss */
  .button--primary.disabled, .button--primary.disabled:hover, .button--primary.disabled:focus, .button--primary.disabled:active, .button--primary.disabled.active, .button--primary[disabled], .button--primary[disabled]:hover, .button--primary[disabled]:focus, .button--primary[disabled]:active, .button--primary[disabled].active, fieldset[disabled] .button--primary, fieldset[disabled] .button--primary:hover, fieldset[disabled] .button--primary:focus, fieldset[disabled] .button--primary:active, fieldset[disabled] .button--primary.active, .button--primary:active.disabled, .button--primary:active.disabled:hover, .button--primary:active.disabled:focus, .button--primary:active.disabled:active, .button--primary:active.disabled.active, .button--primary:active[disabled], .button--primary:active[disabled]:hover, .button--primary:active[disabled]:focus, .button--primary:active[disabled]:active, .button--primary:active[disabled].active, fieldset[disabled] .button--primary:active, fieldset[disabled] .button--primary:active:hover, fieldset[disabled] .button--primary:active:focus, fieldset[disabled] .button--primary:active:active, fieldset[disabled] .button--primary:active.active, .button--primary:focus.disabled, .button--primary:focus.disabled:hover, .button--primary:focus.disabled:focus, .button--primary:focus.disabled:active, .button--primary:focus.disabled.active, .button--primary:focus[disabled], .button--primary:focus[disabled]:hover, .button--primary:focus[disabled]:focus, .button--primary:focus[disabled]:active, .button--primary:focus[disabled].active, fieldset[disabled] .button--primary:focus, fieldset[disabled] .button--primary:focus:hover, fieldset[disabled] .button--primary:focus:focus, fieldset[disabled] .button--primary:focus:active, fieldset[disabled] .button--primary:focus.active {
    background-color: #ffd014;
    border-color: #fac800;
    cursor: not-allowed;
    pointer-events: none; }

/* line 39, ../scss/generic/mixins/_buttons.scss */
.button--secondary:hover, .button--secondary:focus, .button--secondary:active, .button--secondary.active, .open .button--secondary.dropdown-toggle {
  background-color: #514c4e;
  border-color: #393637;
  color: white; }
/* line 34, ../scss/elements/_buttons.scss */
.button--secondary, .button--secondary:active, .button--secondary:focus {
  background-color: #666062;
  border-color: #595455;
  color: white !important; }
  /* line 14, ../scss/generic/mixins/_buttons.scss */
  .button--secondary:active, .button--secondary.active, .button--secondary:active:active, .button--secondary:active.active, .button--secondary:focus:active, .button--secondary:focus.active {
    background-image: none; }
  /* line 22, ../scss/generic/mixins/_buttons.scss */
  .button--secondary.disabled, .button--secondary.disabled:hover, .button--secondary.disabled:focus, .button--secondary.disabled:active, .button--secondary.disabled.active, .button--secondary[disabled], .button--secondary[disabled]:hover, .button--secondary[disabled]:focus, .button--secondary[disabled]:active, .button--secondary[disabled].active, fieldset[disabled] .button--secondary, fieldset[disabled] .button--secondary:hover, fieldset[disabled] .button--secondary:focus, fieldset[disabled] .button--secondary:active, fieldset[disabled] .button--secondary.active, .button--secondary:active.disabled, .button--secondary:active.disabled:hover, .button--secondary:active.disabled:focus, .button--secondary:active.disabled:active, .button--secondary:active.disabled.active, .button--secondary:active[disabled], .button--secondary:active[disabled]:hover, .button--secondary:active[disabled]:focus, .button--secondary:active[disabled]:active, .button--secondary:active[disabled].active, fieldset[disabled] .button--secondary:active, fieldset[disabled] .button--secondary:active:hover, fieldset[disabled] .button--secondary:active:focus, fieldset[disabled] .button--secondary:active:active, fieldset[disabled] .button--secondary:active.active, .button--secondary:focus.disabled, .button--secondary:focus.disabled:hover, .button--secondary:focus.disabled:focus, .button--secondary:focus.disabled:active, .button--secondary:focus.disabled.active, .button--secondary:focus[disabled], .button--secondary:focus[disabled]:hover, .button--secondary:focus[disabled]:focus, .button--secondary:focus[disabled]:active, .button--secondary:focus[disabled].active, fieldset[disabled] .button--secondary:focus, fieldset[disabled] .button--secondary:focus:hover, fieldset[disabled] .button--secondary:focus:focus, fieldset[disabled] .button--secondary:focus:active, fieldset[disabled] .button--secondary:focus.active {
    background-color: #666062;
    border-color: #595455;
    cursor: not-allowed;
    pointer-events: none; }

/* line 41, ../scss/elements/_buttons.scss */
.button--subtle, input.button--subtle {
  color: #6d6e71;
  background-color: #e9e9e9;
  border-color: #d0d0d0;
  background-color: rgba(229, 229, 229, 0.35);
  border-color: rgba(216, 216, 216, 0.35);
  color: inherit; }
  /* line 14, ../scss/generic/mixins/_buttons.scss */
  .button--subtle:active, .button--subtle.active, input.button--subtle:active, input.button--subtle.active {
    background-image: none; }
  /* line 22, ../scss/generic/mixins/_buttons.scss */
  .button--subtle.disabled, .button--subtle.disabled:hover, .button--subtle.disabled:focus, .button--subtle.disabled:active, .button--subtle.disabled.active, .button--subtle[disabled], .button--subtle[disabled]:hover, .button--subtle[disabled]:focus, .button--subtle[disabled]:active, .button--subtle[disabled].active, fieldset[disabled] .button--subtle, fieldset[disabled] .button--subtle:hover, fieldset[disabled] .button--subtle:focus, fieldset[disabled] .button--subtle:active, fieldset[disabled] .button--subtle.active, input.button--subtle.disabled, input.button--subtle.disabled:hover, input.button--subtle.disabled:focus, input.button--subtle.disabled:active, input.button--subtle.disabled.active, input.button--subtle[disabled], input.button--subtle[disabled]:hover, input.button--subtle[disabled]:focus, input.button--subtle[disabled]:active, input.button--subtle[disabled].active, fieldset[disabled] input.button--subtle, fieldset[disabled] input.button--subtle:hover, fieldset[disabled] input.button--subtle:focus, fieldset[disabled] input.button--subtle:active, fieldset[disabled] input.button--subtle.active {
    background-color: rgba(229, 229, 229, 0.35);
    border-color: rgba(216, 216, 216, 0.35);
    cursor: not-allowed;
    pointer-events: none; }
  /* line 39, ../scss/generic/mixins/_buttons.scss */
  .button--subtle:hover, .button--subtle:focus, .button--subtle:active, .button--subtle.active, .open .button--subtle.dropdown-toggle, input.button--subtle:hover, input.button--subtle:focus, input.button--subtle:active, input.button--subtle.active, .open input.button--subtle.dropdown-toggle {
    background-color: #666062;
    border-color: #595455;
    color: inherit; }
  /* line 49, ../scss/elements/_buttons.scss */
  .button--subtle:hover, input.button--subtle:hover {
    color: white; }

/**
 * Positive actions; e.g. sign in, purchase, submit, etc.
 */
/* line 57, ../scss/elements/_buttons.scss */
.button--positive {
  background-color: #4a993e;
  border-color: #418737;
  color: white; }
  /* line 14, ../scss/generic/mixins/_buttons.scss */
  .button--positive:active, .button--positive.active {
    background-image: none; }
  /* line 22, ../scss/generic/mixins/_buttons.scss */
  .button--positive.disabled, .button--positive.disabled:hover, .button--positive.disabled:focus, .button--positive.disabled:active, .button--positive.disabled.active, .button--positive[disabled], .button--positive[disabled]:hover, .button--positive[disabled]:focus, .button--positive[disabled]:active, .button--positive[disabled].active, fieldset[disabled] .button--positive, fieldset[disabled] .button--positive:hover, fieldset[disabled] .button--positive:focus, fieldset[disabled] .button--positive:active, fieldset[disabled] .button--positive.active {
    background-color: #4a993e;
    border-color: #418737;
    cursor: not-allowed;
    pointer-events: none; }
  /* line 39, ../scss/generic/mixins/_buttons.scss */
  .button--positive:hover, .button--positive:focus, .button--positive:active, .button--positive.active, .open .button--positive.dropdown-toggle {
    background-color: #3c7c32;
    border-color: #356d2c;
    color: white; }

/**
 * Negative actions; e.g. close account, delete photo, remove friend, etc.
 */
/* line 65, ../scss/elements/_buttons.scss */
.button--negative {
  background-color: #b33630;
  border-color: #9f302b;
  color: white; }
  /* line 14, ../scss/generic/mixins/_buttons.scss */
  .button--negative:active, .button--negative.active {
    background-image: none; }
  /* line 22, ../scss/generic/mixins/_buttons.scss */
  .button--negative.disabled, .button--negative.disabled:hover, .button--negative.disabled:focus, .button--negative.disabled:active, .button--negative.disabled.active, .button--negative[disabled], .button--negative[disabled]:hover, .button--negative[disabled]:focus, .button--negative[disabled]:active, .button--negative[disabled].active, fieldset[disabled] .button--negative, fieldset[disabled] .button--negative:hover, fieldset[disabled] .button--negative:focus, fieldset[disabled] .button--negative:active, fieldset[disabled] .button--negative.active {
    background-color: #b33630;
    border-color: #9f302b;
    cursor: not-allowed;
    pointer-events: none; }
  /* line 39, ../scss/generic/mixins/_buttons.scss */
  .button--negative:hover, .button--negative:focus, .button--negative:active, .button--negative.active, .open .button--negative.dropdown-toggle {
    background-color: #932c27;
    border-color: #832723;
    color: white; }

/**
 * Inactive, disabled buttons.
 */
/* line 82, ../scss/elements/_buttons.scss */
.button--icon {
  border: 0;
  background: transparent; }

/*------------------------------------*\
    $HEADER
\*------------------------------------*/
/* line 7, ../scss/elements/_header.scss */
.site-header {
  overflow: hidden;
  height: 74px;
  background-color: white;
  border-top: 3px solid #ffd014; }

/* line 15, ../scss/elements/_header.scss */
.site-logo {
  width: 10%;
  height: 54px;
  display: inline-block;
  margin: 6px 15px; }
  /* line 23, ../scss/elements/_header.scss */
  .site-logo a {
    display: block;
    width: 74px;
    height: 54px;
    background: url("/images/cru-logo.svg") no-repeat center center;
    background-size: contain; }
  /* line 31, ../scss/elements/_header.scss */
  .site-logo h1 {
    margin-bottom: 0; }

/**
 * No solution for browsers that do not support svg format
 */
/* line 39, ../scss/elements/_header.scss */
.no-svg .site-logo a {
  background: url("/images/cru-logo.png"); }

/*------------------------------------*\
    $FOOTER
\*------------------------------------*/
/* line 5, ../scss/elements/_footer.scss */
.global-footer {
  /* 3 */
  /* 3 */
  /* 4 */
  /* 6 */
  /* 6 */
  /* 7 */
  margin-top: 100px;
  /* 9 */
  margin-top: 5.26316rem;
  /* 9 */ }
  /* line 9, ../scss/elements/_footer.scss */
  .global-footer .section-divider {
    border-color: #ffd014; }
  /* line 16, ../scss/elements/_footer.scss */
  .global-footer > nav ul {
    text-align: center; }
  /* line 20, ../scss/elements/_footer.scss */
  .global-footer > nav a {
    color: #353535; }
  /* line 27, ../scss/elements/_footer.scss */
  .global-footer .copy {
    text-align: center; }

/* line 6, ../scss/elements/_social.scss */
.social__item--facebook, .social__item--facebook:hover {
  color: #3b5999; }

/* line 10, ../scss/elements/_social.scss */
.social__item--gplus, .social__item--gplus:hover {
  color: #dd4b39; }

/* line 14, ../scss/elements/_social.scss */
.social__item--twitter, .social__item--twitter:hover {
  color: #55acee; }

/* line 18, ../scss/elements/_social.scss */
.social__item {
  font-size: 24px;
  font-size: 1.26316rem;
  line-height: 1.20833; }
  /* line 21, ../scss/elements/_social.scss */
  .social__item:hover {
    text-decoration: none; }

/**
 * Facebook Comments box
 */
/* line 58, ../scss/elements/_social.scss */
.fbFeedbackContent .composer {
  padding-top: 14px;
  padding-bottom: 14px;
  padding-right: 14px; }
/* line 64, ../scss/elements/_social.scss */
.fbFeedbackContent .fbFeedbackPost {
  padding-bottom: 5px !important;
  padding-top: 15px; }

/* This element holds injected scripts inside iframes that in some cases may stretch layouts. So, we're just hiding it. */
/* To fill the container and nothing else */
/* line 86, ../scss/elements/_social.scss */
.fb-like.fb_iframe_widget > span,
#page--home #twitter-widget-0,
#___plusone_0 {
  vertical-align: middle !important;
  height: 25px !important; }

/* line 93, ../scss/elements/_social.scss */
.fb-like {
  position: relative;
  margin-right: 2px; }

/* line 98, ../scss/elements/_social.scss */
.twitter-follow-button {
  position: relative;
  top: 3px;
  height: 25px;
  margin-right: 2px; }

/* line 105, ../scss/elements/_social.scss */
#___plusone_0 {
  position: relative;
  top: -1px; }

/**
 * Article Share Buttons
 *
 */
/*    */
/* line 118, ../scss/elements/_social.scss */
.social-shares .fb-like {
  top: -3px; }
/* line 123, ../scss/elements/_social.scss */
.social-shares .twitter-share-button, .social-shares .twitter-tweet-button, .social-shares .twitter-count-horizontal {
  width: 85px !important; }
/* line 127, ../scss/elements/_social.scss */
.social-shares .share-alt {
  position: relative;
  top: -5px; }

/**
*Twitter Follow Button
*
*/
/* line 145, ../scss/elements/_social.scss */
.follow-button a > span {
  margin-top: 100px; }

/*------------------------------------*\
    $SEARCH
\*------------------------------------*/
/* line 6, ../scss/elements/_site-search.scss */
.site-search {
  position: absolute;
  top: 0;
  right: 15px; }
  /* line 11, ../scss/elements/_site-search.scss */
  .site-search fieldset {
    height: 74px;
    padding: 0; }
  /* line 16, ../scss/elements/_site-search.scss */
  .site-search ul {
    line-height: 74px; }

/* line 21, ../scss/elements/_site-search.scss */
.search-field {
  width: 254px;
  max-height: 74px;
  line-height: 18px;
  border-width: 1px;
  padding-left: 8px;
  padding-right: 60px;
  display: block; }
  /* line 32, ../scss/elements/_site-search.scss */
  .search-field::-webkit-input-placeholder {
    font-size: 14px; }
  /* line 33, ../scss/elements/_site-search.scss */
  .search-field::-moz-placeholder {
    font-size: 14px; }
  /* line 34, ../scss/elements/_site-search.scss */
  .search-field:-ms-input-placeholder {
    font-size: 14px; }
  /* line 35, ../scss/elements/_site-search.scss */
  .search-field:-moz-placeholder {
    font-size: 14px; }

/* line 39, ../scss/elements/_site-search.scss */
.search-button, .primary-search--options {
  padding: 0;
  position: absolute;
  top: 0;
  display: block;
  text-align: center;
  width: 74px;
  height: 74px;
  line-height: 74px; }
  /* line 52, ../scss/elements/_site-search.scss */
  .search-button > i, .primary-search--options > i {
    color: #6d6e71;
    font-size: 70%; }
  /* line 59, ../scss/elements/_site-search.scss */
  .search-button:hover i, .primary-search--options:hover i {
    color: #ffd014; }

/* line 65, ../scss/elements/_site-search.scss */
.search-button {
  right: 29px; }

/* line 72, ../scss/elements/_site-search.scss */
.primary-search--options {
  right: 0; }

/* line 79, ../scss/elements/_site-search.scss */
.primary-search--dropdown {
  position: absolute;
  overflow: hidden;
  visibility: hidden;
  color: white;
  right: 0;
  z-index: 2;
  width: 100%;
  background-color: #333333; }
  /* line 100, ../scss/elements/_site-search.scss */
  .primary-search--dropdown li a {
    display: block;
    text-align: left;
    color: #ffd014;
    border-radius: 3px;
    margin: 0.22656rem;
    padding-left: 0.45313rem;
    padding-right: 0.45313rem; }
    /* line 112, ../scss/elements/_site-search.scss */
    .primary-search--dropdown li a:hover {
      text-decoration: none;
      background: #ffd014;
      color: #333333; }

/* line 122, ../scss/elements/_site-search.scss */
.primary-search.active .primary-search--options {
  background-color: #333333; }
  /* line 125, ../scss/elements/_site-search.scss */
  .primary-search.active .primary-search--options .icon-down-arrow {
    color: #ffd014; }
    /* line 128, ../scss/elements/_site-search.scss */
    .primary-search.active .primary-search--options .icon-down-arrow:before {
      content: '\e80c'; }
/* line 135, ../scss/elements/_site-search.scss */
.primary-search.active .primary-search--dropdown {
  visibility: visible; }

/* line 142, ../scss/elements/_site-search.scss */
.primary-search__results h3 {
  border-bottom: 1px solid #ddd; }

/* line 153, ../scss/elements/_site-search.scss */
.primary-search__results--item > a:hover {
  text-decoration: none; }

/* line 159, ../scss/elements/_site-search.scss */
.results-title {
  color: #3eb1c8; }

/* line 163, ../scss/elements/_site-search.scss */
#search-dropdown a.selected {
  text-decoration: underline; }

/*------------------------------------*\
    $NAVIGATION
\*------------------------------------*/
/* line 7, ../scss/elements/_navigation.scss */
.navigation {
  position: relative;
  overflow: hidden;
  width: 240px; }

/* line 14, ../scss/elements/_navigation.scss */
.search {
  height: auto;
  line-height: 1.5; }

/* line 20, ../scss/elements/_navigation.scss */
#search_options {
  z-index: 501;
  top: 31px;
  background-color: #ffffff;
  border-bottom-right-radius: 2px;
  border-bottom-left-radius: 2px; }

/* line 29, ../scss/elements/_navigation.scss */
#user-actions {
  position: absolute;
  right: 220px;
  margin: 0; }
  /* line 36, ../scss/elements/_navigation.scss */
  #user-actions > li {
    display: block;
    float: left; }
    /* line 40, ../scss/elements/_navigation.scss */
    #user-actions > li > a {
      display: block;
      color: #8a8a8a;
      padding: 0 10px;
      font-size: 14px;
      font-weight: 400;
      letter-spacing: 0.9px; }

/* line 52, ../scss/elements/_navigation.scss */
#toolbar form {
  border-radius: 2px; }

/* line 1, ../scss/elements/_tiles.scss */
.tile__item {
  background-color: white;
  -webkit-box-shadow: 0 0 6px rgba(0, 0, 0, 0.2);
  -moz-box-shadow: 0 0 6px rgba(0, 0, 0, 0.2);
  -ms-box-shadow: 0 0 6px rgba(0, 0, 0, 0.2);
  -o-box-shadow: 0 0 6px rgba(0, 0, 0, 0.2);
  box-shadow: 0 0 6px rgba(0, 0, 0, 0.2);
  margin-bottom: 29px;
  text-align: left; }
  /* line 9, ../scss/elements/_tiles.scss */
  .tile__item > h4 {
    margin-bottom: 0;
    padding-top: 15px;
    padding-right: 15px;
    padding-bottom: 7px;
    padding-left: 15px; }
  /* line 17, ../scss/elements/_tiles.scss */
  .tile__item > a > h4 {
    color: #444444;
    margin-bottom: 0;
    padding-top: 15px;
    padding-right: 15px;
    padding-bottom: 15px;
    padding-left: 15px; }
  /* line 28, ../scss/elements/_tiles.scss */
  .tile__item > a:hover {
    text-decoration: none; }
  /* line 32, ../scss/elements/_tiles.scss */
  .tile__item > ul {
    margin-bottom: 0;
    padding-top: 7px;
    padding-right: 15px;
    padding-bottom: 15px;
    font-size: 90%;
    list-style: none; }
    /* line 42, ../scss/elements/_tiles.scss */
    .tile__item > ul li {
      text-indent: -.5em; }
    /* line 46, ../scss/elements/_tiles.scss */
    .tile__item > ul li:before {
      content: "\002022";
      color: #ffd014;
      display: inline-block;
      width: .5em;
      margin-left: .1em; }
  /* line 57, ../scss/elements/_tiles.scss */
  .tile__item > ol {
    margin-bottom: 0;
    padding-top: 7px;
    padding-right: 15px;
    padding-bottom: 15px;
    padding-left: 0px;
    font-size: 90%; }
  /* line 67, ../scss/elements/_tiles.scss */
  .tile__item > p {
    margin-top: 0;
    margin-bottom: 0;
    padding-top: 7px;
    padding-right: 15px;
    padding-bottom: 15px;
    padding-left: 15px;
    font-size: 90%; }
  /* line 78, ../scss/elements/_tiles.scss */
  .tile__item > a > p {
    color: #444444;
    margin-top: 0;
    margin-bottom: 0;
    padding-top: 7px;
    padding-right: 15px;
    padding-bottom: 15px;
    padding-left: 15px;
    font-size: 90%; }
  /* line 93, ../scss/elements/_tiles.scss */
  .tile__item > .button {
    margin-bottom: 15px;
    margin-left: 15px; }
  /* line 99, ../scss/elements/_tiles.scss */
  .tile__item > div > img {
    width: 100%;
    display: block; }

/* line 105, ../scss/elements/_tiles.scss */
.masonry__item {
  /*following properties fix problem where two halves stack instead of sit side-by-side */
  margin-left: -1px;
  transform: translateX(1px); }

/**
 * Page components
 */
/**
 * Slider Helper classes
 */
/* line 14, ../scss/elements/_slider.scss */
.article-details {
  -webkit-animation-timing-function: ease;
  -moz-animation-timing-function: ease;
  -ms-animation-timing-function: ease;
  -o-animation-timing-function: ease;
  animation-timing-function: ease; }

/* line 21, ../scss/elements/_slider.scss */
.content-slider a {
  cursor: pointer; }
/* line 27, ../scss/elements/_slider.scss */
.content-slider:hover .slider-control__prev, .content-slider:hover .slider-control__next {
  -webkit-transform: translateX(0px);
  -moz-transform: translateX(0px);
  -ms-transform: translateX(0px);
  -o-transform: translateX(0px);
  transform: translateX(0px); }
@media screen and (max-width: 48.75em) {
  /* line 31, ../scss/elements/_slider.scss */
  .content-slider:hover .slider-control__prev {
    -webkit-transform: translateX(-10px);
    -moz-transform: translateX(-10px);
    -ms-transform: translateX(-10px);
    -o-transform: translateX(-10px);
    transform: translateX(-10px); } }
@media screen and (max-width: 48.75em) {
  /* line 37, ../scss/elements/_slider.scss */
  .content-slider:hover .slider-control__next {
    -webkit-transform: translateX(10px);
    -moz-transform: translateX(10px);
    -ms-transform: translateX(10px);
    -o-transform: translateX(10px);
    transform: translateX(10px); } }

/* line 47, ../scss/elements/_slider.scss */
.slider__mask, .slider {
  height: 396px; }
  @media screen and (max-width: 33.8125em) {
    /* line 47, ../scss/elements/_slider.scss */
    .slider__mask, .slider {
      height: 288px; } }

/* line 55, ../scss/elements/_slider.scss */
.slider {
  max-width: 1100px; }

/* line 63, ../scss/elements/_slider.scss */
.slider__item {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  -webkit-transition-property: left;
  -moz-transition-property: left;
  -ms-transition-property: left;
  -o-transition-property: left;
  transition-property: left; }
  @media screen and (min-width: 61.25em) {
    /* line 63, ../scss/elements/_slider.scss */
    .slider__item {
      width: 31.6%;
      -webkit-transition-property: width, left, opacity;
      -moz-transition-property: width, left, opacity;
      -ms-transition-property: width, left, opacity;
      -o-transition-property: width, left, opacity;
      transition-property: width, left, opacity;
      -webkit-transition-duration: 0.8s;
      -moz-transition-duration: 0.8s;
      -ms-transition-duration: 0.8s;
      -o-transition-duration: 0.8s;
      transition-duration: 0.8s; } }

/**
 * At bat
 */
/* line 85, ../scss/elements/_slider.scss */
.slider2 {
  left: 0;
  z-index: 1; }
  @media screen and (min-width: 61.25em) {
    /* line 85, ../scss/elements/_slider.scss */
    .slider2 {
      width: 64.9%; } }

/**
 * On Deck
 */
/* line 97, ../scss/elements/_slider.scss */
.slider3 {
  left: 100%; }
  @media screen and (min-width: 61.25em) {
    /* line 97, ../scss/elements/_slider.scss */
    .slider3 {
      left: 66.666666%; } }

/**
 * Last up
 */
/* line 108, ../scss/elements/_slider.scss */
.slider1 {
  left: -100%; }
  @media screen and (min-width: 61.25em) {
    /* line 108, ../scss/elements/_slider.scss */
    .slider1 {
      left: -33.333333%;
      filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=30);
      opacity: 0.3; } }

@media screen and (min-width: 61.25em) {
  /* line 117, ../scss/elements/_slider.scss */
  .slider__reverse .slider1 {
    -webkit-transition: none;
    -moz-transition: none;
    -ms-transition: none;
    -o-transition: none;
    transition: none;
    -webkit-animation-name: sliderReverseEnd;
    -moz-animation-name: sliderReverseEnd;
    -ms-animation-name: sliderReverseEnd;
    animation-name: sliderReverseEnd;
    -webkit-animation-duration: 0.7s;
    -moz-animation-duration: 0.7s;
    -ms-animation-duration: 0.7s;
    animation-duration: 0.7s;
    -webkit-animation-delay: 0, 0.1s;
    -moz-animation-delay: 0, 0.1s;
    -ms-animation-delay: 0, 0.1s;
    animation-delay: 0, 0.1s; } }

/**
 * In the hole
 */
/* line 131, ../scss/elements/_slider.scss */
.slider4 {
  display: none; }
  @media screen and (min-width: 61.25em) {
    /* line 131, ../scss/elements/_slider.scss */
    .slider4 {
      left: 100%;
      display: block;
      -webkit-animation-name: sliderEnd;
      -moz-animation-name: sliderEnd;
      -ms-animation-name: sliderEnd;
      animation-name: sliderEnd;
      -webkit-animation-duration: 0.7s;
      -moz-animation-duration: 0.7s;
      -ms-animation-duration: 0.7s;
      animation-duration: 0.7s;
      -webkit-animation-delay: 0, 0.1s;
      -moz-animation-delay: 0, 0.1s;
      -ms-animation-delay: 0, 0.1s;
      animation-delay: 0, 0.1s;
      filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=30);
      opacity: 0.3; } }

/* line 148, ../scss/elements/_slider.scss */
.slider__reverse .slider4 {
  -webkit-animation: none;
  -moz-animation: none;
  -ms-animation: none;
  animation: none; }

/* line 152, ../scss/elements/_slider.scss */
.slider5,
.slider6,
.slider7,
.slider8 {
  right: 500%; }

/* line 159, ../scss/elements/_slider.scss */
.slider__upcoming {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=30);
  opacity: 0.3; }

/* line 163, ../scss/elements/_slider.scss */
.background-image {
  position: absolute;
  top: 0;
  left: 0;
  overflow: hidden;
  width: 100%;
  height: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -ms-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
  -ms-behavior: url(/backgroundsize.min.htc); }

/* line 179, ../scss/elements/_slider.scss */
.article-details {
  bottom: -10px;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.8);
  background-color: black;
  background-color: rgba(0, 0, 0, 0.7);
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);
  opacity: 0;
  -webkit-transition-property: opacity, bottom, color;
  -moz-transition-property: opacity, bottom, color;
  -ms-transition-property: opacity, bottom, color;
  -o-transition-property: opacity, bottom, color;
  transition-property: opacity, bottom, color;
  -webkit-transition-duration: 250ms;
  -moz-transition-duration: 250ms;
  -ms-transition-duration: 250ms;
  -o-transition-duration: 250ms;
  transition-duration: 250ms;
  -webkit-transition-delay: 340ms, 340ms, 0;
  -moz-transition-delay: 340ms, 340ms, 0;
  -ms-transition-delay: 340ms, 340ms, 0;
  -o-transition-delay: 340ms, 340ms, 0;
  transition-delay: 340ms, 340ms, 0; }
  /* line 196, ../scss/elements/_slider.scss */
  .article-details h3 {
    line-height: 1.25em;
    min-height: 2.5em;
    color: white;
    /* 3 */
    /* 3 */
    /* 4 */
    /* 6 */
    /* 6 */
    /* 7 */
    /* 4 */
    /* 6 */
    /* 6 */
    /* 7 */
    /* 4 */
    /* 6 */
    /* 6 */
    /* 7 */
    padding: 13px 14px 6px;
    /* 9 */
    padding: 0.68421rem 0.73684rem 0.31579rem;
    /* 9 */
    font-size: 22px;
    font-size: 1.15789rem;
    -webkit-transition: color 0.15s linear;
    -moz-transition: color 0.15s linear;
    -ms-transition: color 0.15s linear;
    -o-transition: color 0.15s linear;
    transition: color 0.15s linear; }
    /* line 206, ../scss/elements/_slider.scss */
    .article-details h3:hover {
      color: #ccc; }

/* line 215, ../scss/elements/_slider.scss */
.slider2 .article-details, .slider3 .article-details {
  bottom: 0;
  filter: progid:DXImageTransform.Microsoft.Alpha(enabled=false);
  opacity: 1; }

/* line 223, ../scss/elements/_slider.scss */
.slider-control, .slider-control i {
  -webkit-transition: -webkit-transform 200ms;
  -moz-transition: -moz-transform 200ms;
  -o-transition: -o-transform 200ms; }

/* line 229, ../scss/elements/_slider.scss */
.slider-control {
  top: 25%;
  bottom: 0;
  display: block;
  height: 50%;
  min-width: 55px;
  min-height: 60px;
  width: 100px;
  -webkit-tap-highlight-color: transparent;
  z-index: 1; }
  /* line 245, ../scss/elements/_slider.scss */
  .slider-control i {
    color: #ccc;
    -webkit-transition-property: left;
    -moz-transition-property: left;
    -ms-transition-property: left;
    -o-transition-property: left;
    transition-property: left; }
  /* line 254, ../scss/elements/_slider.scss */
  .slider-control:hover .slider-control--btn {
    width: 64px;
    background-color: rgba(0, 0, 0, 0.8); }

/* line 267, ../scss/elements/_slider.scss */
.slider-control__prev {
  left: 0; }
  @media screen and (min-width: 61.3125em) {
    /* line 267, ../scss/elements/_slider.scss */
    .slider-control__prev {
      -webkit-transform: translateX(-58px);
      -moz-transform: translateX(-58px);
      -ms-transform: translateX(-58px);
      -o-transform: translateX(-58px);
      transform: translateX(-58px); } }
  /* line 274, ../scss/elements/_slider.scss */
  .slider-control__prev .slider-control--btn {
    left: 0; }
  /* line 279, ../scss/elements/_slider.scss */
  .slider-control__prev:hover i {
    left: -.4em; }

/* line 285, ../scss/elements/_slider.scss */
.slider-control__next {
  right: 0; }
  @media screen and (min-width: 61.3125em) {
    /* line 285, ../scss/elements/_slider.scss */
    .slider-control__next {
      -webkit-transform: translateX(58px);
      -moz-transform: translateX(58px);
      -ms-transform: translateX(58px);
      -o-transform: translateX(58px);
      transform: translateX(58px); } }
  /* line 292, ../scss/elements/_slider.scss */
  .slider-control__next .slider-control--btn {
    right: 0; }
  /* line 297, ../scss/elements/_slider.scss */
  .slider-control__next:hover i {
    right: -.4em; }

/* line 303, ../scss/elements/_slider.scss */
.slider-control--btn {
  top: 50%;
  width: 48px;
  height: 60px;
  margin-top: -30px;
  text-align: center;
  line-height: 60px;
  font-size: 2.2em;
  color: white;
  background-color: #222;
  background-color: rgba(0, 0, 0, 0.35);
  -webkit-transition: background-color 150ms linear;
  -moz-transition: background-color 150ms linear;
  -ms-transition: background-color 150ms linear;
  -o-transition: background-color 150ms linear;
  transition: background-color 150ms linear;
  -webkit-transition-property: width;
  -moz-transition-property: width;
  -ms-transition-property: width;
  -o-transition-property: width;
  transition-property: width; }

/**
 * Community specific components
 */
/**
 * Overrides and additional tools
 */
/*------------------------------------*\
    $HELPER
\*------------------------------------*/
/**
 * A series of helper classes to use arbitrarily. Only use a helper class if an
 * element/component doesn’t already have a class to which you could apply this
 * styling, e.g. if you need to float `.main-nav` left then add `float:left;` to
 * that ruleset as opposed to adding the `.float--left` class to the markup.
 *
 */
/**
 * Add/remove floats
 */
/* line 16, ../scss/generic/_helpers.scss */
.float--right {
  float: right; }

/* line 17, ../scss/generic/_helpers.scss */
.float--left {
  float: left; }

/* line 18, ../scss/generic/_helpers.scss */
.float--none {
  float: none; }

/**
 * Text alignment and sizing
 */
/* line 24, ../scss/generic/_helpers.scss */
.text--left {
  text-align: left; }

/* line 25, ../scss/generic/_helpers.scss */
.text--center, .center-block {
  text-align: center; }

/* line 26, ../scss/generic/_helpers.scss */
.text--right {
  text-align: right; }

/* line 27, ../scss/generic/_helpers.scss */
.small-text, .search-field, .primary-search--dropdown {
  font-size: 80%; }

/**
 * Font weights
 */
/* line 33, ../scss/generic/_helpers.scss */
.weight--light, h1, .h1 {
  font-weight: 100; }

/* line 34, ../scss/generic/_helpers.scss */
.weight--semi-light, h2, .h2, h3, .h3 {
  font-weight: 300; }

/* line 35, ../scss/generic/_helpers.scss */
.weight--normal, h4, .h4, h5, .h5 {
  font-weight: 400; }

/* line 36, ../scss/generic/_helpers.scss */
.weight--semibold, h6, .h6 {
  font-weight: 500; }

/* line 37, ../scss/generic/_helpers.scss */
.weight--bold {
  font-weight: 600; }

/**
 * View helpers
 */
/* line 42, ../scss/generic/_helpers.scss */
.overflow--hide {
  overflow: hidden; }

/* line 43, ../scss/generic/_helpers.scss */
.overflow--show {
  overflow: visible; }

/**
 * Positioning
 */
/* line 49, ../scss/generic/_helpers.scss */
.position--absolute {
  position: absolute; }

/* line 50, ../scss/generic/_helpers.scss */
.position--relative, .social-shares .fb-like {
  position: relative; }

/* line 51, ../scss/generic/_helpers.scss */
.position--fixed {
  position: fixed; }

/* line 52, ../scss/generic/_helpers.scss */
.position--t0 {
  top: 0; }

/* line 53, ../scss/generic/_helpers.scss */
.position--b0 {
  bottom: 0; }

/* line 54, ../scss/generic/_helpers.scss */
.position--l0, .article-details {
  left: 0; }

/* line 55, ../scss/generic/_helpers.scss */
.position--r0, .article-details {
  right: 0; }

/**
 * Display
 */
/* line 60, ../scss/generic/_helpers.scss */
.display--block {
  display: block; }

/* line 61, ../scss/generic/_helpers.scss */
.display--inline-block {
  display: inline-block; }

/* line 62, ../scss/generic/_helpers.scss */
.display--inline {
  display: inline; }

/* line 63, ../scss/generic/_helpers.scss */
.display--none, #fb-root {
  display: none; }

/**
 * Sizes
 */
/* line 69, ../scss/generic/_helpers.scss */
.full-height {
  height: 100%; }

/* line 70, ../scss/generic/_helpers.scss */
.full-width, .center-block {
  width: 100%; }

/**
 * Content Alignment
 */
/* line 75, ../scss/generic/_helpers.scss */
hr, .divider, .layout--full, .center-block, .centered,
.center {
  margin-left: auto;
  margin-right: auto; }

/**
 * Borders
 */
/* line 84, ../scss/generic/_helpers.scss */
.border-bottom-solid {
  border-bottom: 1px solid #aaaaaa; }

/**
 * Pull items full width of `.island` parents.
 */
/* line 92, ../scss/generic/_helpers.scss */
.full-bleed {
  margin-right: -29px;
  margin-left: -29px; }
  /* line 96, ../scss/generic/_helpers.scss */
  .islet .full-bleed {
    margin-right: -14.5px;
    margin-left: -14.5px; }

/**
 * Add a help cursor to any element that gives the user extra information on
 * `:hover`.
 */
/* line 107, ../scss/generic/_helpers.scss */
.informative {
  cursor: help; }

/**
 * Mute an object by reducing its opacity.
 */
/* line 115, ../scss/generic/_helpers.scss */
.muted {
  opacity: 0.5;
  filter: alpha(opacity=50); }

/**
 * Add a right-angled quote to links that imply movement, e.g.:
 *
   <a href=# class=go>Read more</a>
 *
 */
/* line 127, ../scss/generic/_helpers.scss */
.go:after, .go:after {
  content: "\00A0" "\00BB"; }

/**
 * Apply capital case to an element (usually a `strong`).
 */
/* line 135, ../scss/generic/_helpers.scss */
.caps {
  text-transform: uppercase; }

/**
 * Hide content off-screen without resorting to `display:none;`, also provide
 * breakpoint specific hidden elements.
 */
/* line 155, ../scss/generic/_helpers.scss */
.accessibility,
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/* line 173, ../scss/generic/_helpers.scss */
.basic-transition, .block-link {
  -webkit-transition: 250ms ease;
  -moz-transition: 250ms ease;
  -ms-transition: 250ms ease;
  -o-transition: 250ms ease;
  transition: 250ms ease; }

/* line 175, ../scss/generic/_helpers.scss */
.decoration--none, .content-slider a {
  text-decoration: none; }

/* line 177, ../scss/generic/_helpers.scss */
.box-shadow--thin {
  -webkit-box-shadow: 0 0 6px rgba(0, 0, 0, 0.2);
  -moz-box-shadow: 0 0 6px rgba(0, 0, 0, 0.2);
  -ms-box-shadow: 0 0 6px rgba(0, 0, 0, 0.2);
  -o-box-shadow: 0 0 6px rgba(0, 0, 0, 0.2);
  box-shadow: 0 0 6px rgba(0, 0, 0, 0.2); }

/*# sourceMappingURL=screen.css.map */
